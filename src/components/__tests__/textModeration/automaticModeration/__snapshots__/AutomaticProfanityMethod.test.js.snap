// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Automatic Text Moderation Snapshot 1`] = `
<Fragment>
  <WithStyles(ForwardRef(Card))
    className="makeStyles-cardRoot-3"
  >
    <Styled(MuiBox)>
      <WithStyles(ForwardRef(Grid))
        container={true}
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
        >
          <label
            className="makeStyles-label-2"
            testId="Channel_Id"
          >
            Channel ID
          </label>
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
        >
          <Styled(MuiBox)
            className="makeStyles-infoIcon-9"
          >
            <WithStyles(WithStyles(ForwardRef(Tooltip)))
              title="Note: Please add a Channel ID or a Channel pattern. eg. channel.* OR pubNub. Channel ID pattern applies to BOTH text & image moderation if both are enabled."
            >
              <img
                alt="info-circle"
                src="/images/info-circle.svg"
              />
            </WithStyles(WithStyles(ForwardRef(Tooltip)))>
          </Styled(MuiBox)>
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
      <Styled(MuiBox)
        mb={2}
        pt={1}
      >
        <WithStyles(ForwardRef(TextField))
          disabled={true}
          error={false}
          fullWidth={true}
          id="channelId"
          name="automaticDetectionChannel"
          onChange={[Function]}
          placeholder="Enter channel or channel pattern here Under18.*, Under18"
          size="small"
          value="*"
          variant="outlined"
        />
      </Styled(MuiBox)>
    </Styled(MuiBox)>
    <WithStyles(ForwardRef(Grid))
      item={true}
    >
      <WithStyles(ForwardRef(Grid))
        container={true}
        justify="flex-start"
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
        >
          <WithStyles(ForwardRef(Checkbox))
            checked={true}
            id="applyAll"
            onChange={[Function]}
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
        >
          <Styled(MuiBox)
            pl={1}
            pt={1}
          >
            <WithStyles(ForwardRef(Typography))
              testId="applyAll_channel"
              variant="body1"
            >
              Apply to All Channel IDs
            </WithStyles(ForwardRef(Typography))>
          </Styled(MuiBox)>
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
    </WithStyles(ForwardRef(Grid))>
    <br />
    <WithStyles(ForwardRef(Grid))
      container={true}
      justify="flex-start"
    >
      <WithStyles(ForwardRef(Grid))
        item={true}
        sm={12}
      >
        <label
          className="makeStyles-label-2"
          testId="SelectToolLabel"
        >
          Select third party tool for Automatic Detection
        </label>
        <Styled(MuiBox)
          mb={2}
          pt={1}
        >
          <WithStyles(ForwardRef(FormControl))
            fullWidth={true}
            size="small"
          >
            <WithStyles(ForwardRef(Select))
              MenuProps={
                Object {
                  "anchorOrigin": Object {
                    "horizontal": "left",
                    "vertical": "bottom",
                  },
                  "getContentAnchorEl": null,
                }
              }
              id="selectTool"
              name="toolForAutomaticDetection"
              onChange={[Function]}
              value="tisane"
              variant="outlined"
            >
              <WithStyles(ForwardRef(MenuItem))
                value="tisane"
              >
                Tisane.ai
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                value="siftninja"
              >
                SiftNinja
              </WithStyles(ForwardRef(MenuItem))>
            </WithStyles(ForwardRef(Select))>
          </WithStyles(ForwardRef(FormControl))>
        </Styled(MuiBox)>
      </WithStyles(ForwardRef(Grid))>
    </WithStyles(ForwardRef(Grid))>
    <br />
    <Styled(MuiBox)
      pt={1}
    >
      <WithStyles(ForwardRef(Grid))
        container={true}
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
        >
          <label
            className="makeStyles-label-2"
            testid="tisaneApiKey"
          >
            Tisane.ai API Key
          </label>
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
        >
          <Styled(MuiBox)
            className="makeStyles-infoIcon-9"
          >
            <WithStyles(WithStyles(ForwardRef(Tooltip)))
              interactive={true}
              title={
                <React.Fragment>
                  <span>
                    Sign up with 
                  </span>
                  <a
                    href="https://tisane.ai/signup/"
                    style={
                      Object {
                        "color": "black",
                        "fontWeight": 600,
                        "textDecorationLine": "none",
                      }
                    }
                  >
                    Tisane.ai
                  </a>
                  <span>
                     locate your key under your 
                  </span>
                  <a
                    href="https://tisane.ai/developer/"
                    style={
                      Object {
                        "color": "black",
                        "fontWeight": 600,
                        "textDecorationLine": "none",
                      }
                    }
                  >
                    Developer Profile.
                  </a>
                  <span>
                     Use primary or secondary key. 
                  </span>
                </React.Fragment>
              }
            >
              <img
                alt="info-circle"
                src="/images/info-circle.svg"
              />
            </WithStyles(WithStyles(ForwardRef(Tooltip)))>
          </Styled(MuiBox)>
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
      <Styled(MuiBox)
        mb={2}
        pt={1}
      >
        <WithStyles(ForwardRef(TextField))
          fullWidth={true}
          id="tisaneApiKey"
          name="tisaneApiKey"
          onChange={[Function]}
          placeholder="Tisane.ai API key"
          size="small"
          value=""
          variant="outlined"
        />
      </Styled(MuiBox)>
    </Styled(MuiBox)>
    <br />
    <WithStyles(ForwardRef(Grid))
      container={true}
      justify="flex-start"
    >
      <WithStyles(ForwardRef(Grid))
        item={true}
        sm={5}
      >
        <label
          testid="lang"
        >
          Language
        </label>
        <Styled(MuiBox)
          mb={2}
          pt={1}
        >
          <WithStyles(ForwardRef(FormControl))
            fullWidth={true}
            placeholder="Langauge"
            size="small"
          >
            <WithStyles(ForwardRef(Select))
              MenuProps={
                Object {
                  "anchorOrigin": Object {
                    "horizontal": "left",
                    "vertical": "bottom",
                  },
                  "getContentAnchorEl": null,
                }
              }
              id="lang"
              inputProps={
                Object {
                  "aria-label": "Without label",
                }
              }
              name="tisaneLanguage"
              onChange={[Function]}
              value="Hindi"
              variant="outlined"
            >
              <WithStyles(ForwardRef(MenuItem))
                key="0"
                value="Autodetect"
              >
                Autodetect
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                key="1"
                value="English"
              >
                English
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                key="2"
                value="Spanish"
              >
                Spanish
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                key="3"
                value="Portugese"
              >
                Portugese
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                key="4"
                value="French"
              >
                French
              </WithStyles(ForwardRef(MenuItem))>
            </WithStyles(ForwardRef(Select))>
          </WithStyles(ForwardRef(FormControl))>
        </Styled(MuiBox)>
      </WithStyles(ForwardRef(Grid))>
    </WithStyles(ForwardRef(Grid))>
    <br />
    <WithStyles(ForwardRef(Grid))
      container={true}
      justify="space-between"
      spacing={6}
    >
      <WithStyles(ForwardRef(Grid))
        item={true}
        lg={6}
        md={6}
        sm={6}
        xs={12}
      >
        <Styled(MuiBox)
          pl={1}
        >
          <label
            className="makeStyles-label-2"
            testid="BigotryLevel"
          >
            Filter Level For Bigotry (Hate Speech)
          </label>
          <Styled(MuiBox)
            pt={1}
          >
            <SliderComponent
              id="BigotryLevel"
              name="tisane"
              onChange={[Function]}
              value={0.5}
            />
          </Styled(MuiBox)>
        </Styled(MuiBox)>
      </WithStyles(ForwardRef(Grid))>
      <WithStyles(ForwardRef(Grid))
        item={true}
        lg={6}
        md={6}
        sm={6}
        xs={6}
      >
        <Styled(MuiBox)
          pl={1}
        >
          <label
            className="makeStyles-label-2"
            testid="CyberBullying"
          >
            Filter Level For Personal Attacks (Cyberbullying)
          </label>
          <Styled(MuiBox)
            pt={1}
          >
            <SliderComponent
              id="CyberBullying"
              name="tisane"
              onChange={[Function]}
              value={0.5}
            />
          </Styled(MuiBox)>
        </Styled(MuiBox)>
      </WithStyles(ForwardRef(Grid))>
      <WithStyles(ForwardRef(Grid))
        item={true}
        lg={6}
        md={6}
        sm={6}
        xs={12}
      >
        <Styled(MuiBox)
          pl={1}
        >
          <label
            className="makeStyles-label-2"
            testid="criminalLevel"
          >
            Filter Level For Criminal Activity
          </label>
          <Styled(MuiBox)
            pt={1}
          >
            <SliderComponent
              id="criminalLevel"
              name="tisane"
              onChange={[Function]}
              value={0.5}
            />
          </Styled(MuiBox)>
        </Styled(MuiBox)>
      </WithStyles(ForwardRef(Grid))>
      <WithStyles(ForwardRef(Grid))
        item={true}
        lg={6}
        md={6}
        sm={6}
        xs={6}
      >
        <Styled(MuiBox)
          pl={1}
        >
          <label
            className="makeStyles-label-2"
            testid="sexualLevel"
          >
            Filter Level For Sexual Advances
          </label>
          <Styled(MuiBox)
            pt={1}
          >
            <SliderComponent
              id="sexualLevel"
              name="tisane"
              onChange={[Function]}
              value={0.5}
            />
          </Styled(MuiBox)>
        </Styled(MuiBox)>
      </WithStyles(ForwardRef(Grid))>
      <WithStyles(ForwardRef(Grid))
        item={true}
        lg={6}
        md={6}
        sm={6}
        xs={12}
      >
        <Styled(MuiBox)
          pl={1}
        >
          <label
            className="makeStyles-label-2"
            testid="ProfanityLevel"
          >
            Filter Level For Profanity
          </label>
          <Styled(MuiBox)
            pt={1}
          >
            <SliderComponent
              id="ProfanityLevel"
              name="tisane"
              onChange={[Function]}
              value={0.5}
            />
          </Styled(MuiBox)>
        </Styled(MuiBox)>
      </WithStyles(ForwardRef(Grid))>
    </WithStyles(ForwardRef(Grid))>
    <WithStyles(ForwardRef(Grid))
      container={true}
      justify="flex-start"
      spacing={6}
    >
      <WithStyles(ForwardRef(Grid))
        item={true}
        md={6}
        sm={6}
      >
        <label
          className="makeStyles-label-2"
          testid="blockOrMask"
        >
          When profanity is detected
        </label>
        <Styled(MuiBox)
          mb={2}
          pt={1}
        >
          <WithStyles(ForwardRef(FormControl))
            fullWidth={true}
            size="small"
          >
            <WithStyles(ForwardRef(Select))
              MenuProps={
                Object {
                  "anchorOrigin": Object {
                    "horizontal": "left",
                    "vertical": "bottom",
                  },
                  "getContentAnchorEl": null,
                }
              }
              id="blockOrMask"
              inputProps={
                Object {
                  "aria-label": "Without label",
                }
              }
              name="automaticDetectionModType"
              onChange={[Function]}
              value="mask-message"
              variant="outlined"
            >
              <WithStyles(ForwardRef(MenuItem))
                value="mask-message"
              >
                Mask Message
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                value="block-message"
              >
                Block Message
              </WithStyles(ForwardRef(MenuItem))>
            </WithStyles(ForwardRef(Select))>
          </WithStyles(ForwardRef(FormControl))>
        </Styled(MuiBox)>
      </WithStyles(ForwardRef(Grid))>
      <WithStyles(ForwardRef(Grid))
        item={true}
        md={6}
        sm={6}
      >
        <WithStyles(ForwardRef(Grid))
          container={true}
        >
          <WithStyles(ForwardRef(Grid))
            item={true}
          >
            <label
              className="makeStyles-label-2"
              testid="setChar"
            >
              Set a masking character
            </label>
          </WithStyles(ForwardRef(Grid))>
          <WithStyles(ForwardRef(Grid))
            item={true}
          >
            <Styled(MuiBox)
              className="makeStyles-infoIcon-9"
            >
              <WithStyles(WithStyles(ForwardRef(Tooltip)))
                title="Note: Default value will be *"
              >
                <img
                  alt="info-circle"
                  src="/images/info-circle.svg"
                />
              </WithStyles(WithStyles(ForwardRef(Tooltip)))>
            </Styled(MuiBox)>
          </WithStyles(ForwardRef(Grid))>
        </WithStyles(ForwardRef(Grid))>
        <Styled(MuiBox)
          pt={1}
        >
          <WithStyles(ForwardRef(TextField))
            error={false}
            fullWidth={true}
            id="setChar"
            inputProps={
              Object {
                "maxLength": 1,
              }
            }
            name="automaticDetectionCharacterToMaskWith"
            onChange={[Function]}
            placeholder="Set"
            size="small"
            value="*"
            variant="outlined"
          />
        </Styled(MuiBox)>
      </WithStyles(ForwardRef(Grid))>
    </WithStyles(ForwardRef(Grid))>
    <br />
    <WithStyles(ForwardRef(Grid))
      container={true}
    >
      <WithStyles(ForwardRef(Grid))
        item={true}
      >
        <WithStyles(ForwardRef(Grid))
          container={true}
          justify="flex-start"
        >
          <WithStyles(ForwardRef(Grid))
            item={true}
          >
            <WithStyles(ForwardRef(Checkbox))
              checked={false}
              id="reRoute"
              name="automaticDetectionReRouteMessages"
              onChange={[Function]}
            />
          </WithStyles(ForwardRef(Grid))>
          <WithStyles(ForwardRef(Grid))
            item={true}
          >
            <Styled(MuiBox)
              pl={1}
              pt={1}
            >
              <WithStyles(ForwardRef(Typography))
                testid="reRouteMsg"
                variant="body1"
              >
                Route messages to
              </WithStyles(ForwardRef(Typography))>
            </Styled(MuiBox)>
          </WithStyles(ForwardRef(Grid))>
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
      <WithStyles(ForwardRef(Grid))
        item={true}
      >
        <Styled(MuiBox)>
          <WithStyles(ForwardRef(Chip))
            className="makeStyles-reroute-8"
            label="banned.*"
          />
        </Styled(MuiBox)>
      </WithStyles(ForwardRef(Grid))>
    </WithStyles(ForwardRef(Grid))>
    <br />
    <WithStyles(ForwardRef(Grid))
      container={true}
      justify="space-between"
      spacing={3}
    >
      <WithStyles(ForwardRef(Grid))
        item={true}
      />
      <WithStyles(ForwardRef(Grid))
        item={true}
      >
        <WithStyles(ForwardRef(Button))
          className="makeStyles-saveButtonStyle-5"
          disabled={false}
          id="save"
          variant="contained"
        >
          Save
        </WithStyles(ForwardRef(Button))>
      </WithStyles(ForwardRef(Grid))>
    </WithStyles(ForwardRef(Grid))>
  </WithStyles(ForwardRef(Card))>
</Fragment>
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Case For Chat Sanpshot 1`] = `
<Chat
  channel="pro.one"
  isLoading={true}
  messageToEdit={Array []}
  messages={
    Array [
      Object {
        "channel": "pro.one",
        "message": Object {
          "file": Object {},
          "message": Object {
            "text": "hallelujah",
          },
          "text": "hallelujah",
          "time": "07:05",
          "timetoken": "16287753052976351",
          "type": "text",
        },
        "messageType": 4,
        "timetoken": "16287753052976351",
        "uuid": "pn-6f3228b8-32d3-4921-b9eb-af8e96bbde8d",
      },
      Object {
        "channel": "pro.one",
        "message": Object {
          "file": Object {},
          "message": Object {
            "text": "hallelujah",
          },
          "text": "hallelujah",
          "time": "07:25",
          "timetoken": "16287765563258261",
          "type": "text",
        },
        "messageType": 4,
        "timetoken": "16287765563258261",
        "uuid": "pn-6f3228b8-32d3-4921-b9eb-af8e96bbde8d",
      },
      Object {
        "channel": "pro.one",
        "message": Object {
          "file": Object {
            "id": "15bef783-2c5d-43f1-942a-52894d5246fb",
            "name": "self1.jpeg",
            "url": "https://ps.pndsn.com/v1/files/sub-c-1335d6e8-a993-11eb-9cd5-b6e2b128ec2a/channels/pro.one/files/15bef783-2c5d-43f1-942a-52894d5246fb/self1.jpeg",
          },
          "image": "https://ps.pndsn.com/v1/files/sub-c-1335d6e8-a993-11eb-9cd5-b6e2b128ec2a/channels/pro.one/files/15bef783-2c5d-43f1-942a-52894d5246fb/self1.jpeg",
          "message": Object {
            "text": "hallelujah",
          },
          "text": "hallelujah",
          "time": "07:26",
          "timetoken": "16287765658563945",
          "type": "text",
        },
        "messageType": 4,
        "timetoken": "16287765658563945",
        "uuid": "pn-6f3228b8-32d3-4921-b9eb-af8e96bbde8d",
      },
      Object {
        "channel": "pro.one",
        "message": Object {
          "file": Object {
            "id": "6205f5c3-3da9-41ba-bb9c-e5e49e61aedd",
            "name": "self1.jpeg",
            "url": "https://ps.pndsn.com/v1/files/sub-c-1335d6e8-a993-11eb-9cd5-b6e2b128ec2a/channels/pro.one/files/6205f5c3-3da9-41ba-bb9c-e5e49e61aedd/self1.jpeg",
          },
          "image": "https://ps.pndsn.com/v1/files/sub-c-1335d6e8-a993-11eb-9cd5-b6e2b128ec2a/channels/pro.one/files/6205f5c3-3da9-41ba-bb9c-e5e49e61aedd/self1.jpeg",
          "message": Object {
            "text": "hallelujah",
          },
          "text": "hallelujah",
          "time": "07:26",
          "timetoken": "16287766010372679",
          "type": "text",
        },
        "messageType": 4,
        "timetoken": "16287766010372679",
        "uuid": "pn-6f3228b8-32d3-4921-b9eb-af8e96bbde8d",
      },
    ]
  }
  setMessageToEdit={[MockFunction]}
  toggledVal="chat"
  updated={[MockFunction]}
>
  <WithStyles(ForwardRef(Grid))
    className="makeStyles-messages-3"
    item={true}
  >
    <ForwardRef(Grid)
      className="makeStyles-messages-3"
      classes={
        Object {
          "align-content-xs-center": "MuiGrid-align-content-xs-center",
          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
          "align-items-xs-center": "MuiGrid-align-items-xs-center",
          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
          "container": "MuiGrid-container",
          "direction-xs-column": "MuiGrid-direction-xs-column",
          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
          "grid-lg-1": "MuiGrid-grid-lg-1",
          "grid-lg-10": "MuiGrid-grid-lg-10",
          "grid-lg-11": "MuiGrid-grid-lg-11",
          "grid-lg-12": "MuiGrid-grid-lg-12",
          "grid-lg-2": "MuiGrid-grid-lg-2",
          "grid-lg-3": "MuiGrid-grid-lg-3",
          "grid-lg-4": "MuiGrid-grid-lg-4",
          "grid-lg-5": "MuiGrid-grid-lg-5",
          "grid-lg-6": "MuiGrid-grid-lg-6",
          "grid-lg-7": "MuiGrid-grid-lg-7",
          "grid-lg-8": "MuiGrid-grid-lg-8",
          "grid-lg-9": "MuiGrid-grid-lg-9",
          "grid-lg-auto": "MuiGrid-grid-lg-auto",
          "grid-lg-true": "MuiGrid-grid-lg-true",
          "grid-md-1": "MuiGrid-grid-md-1",
          "grid-md-10": "MuiGrid-grid-md-10",
          "grid-md-11": "MuiGrid-grid-md-11",
          "grid-md-12": "MuiGrid-grid-md-12",
          "grid-md-2": "MuiGrid-grid-md-2",
          "grid-md-3": "MuiGrid-grid-md-3",
          "grid-md-4": "MuiGrid-grid-md-4",
          "grid-md-5": "MuiGrid-grid-md-5",
          "grid-md-6": "MuiGrid-grid-md-6",
          "grid-md-7": "MuiGrid-grid-md-7",
          "grid-md-8": "MuiGrid-grid-md-8",
          "grid-md-9": "MuiGrid-grid-md-9",
          "grid-md-auto": "MuiGrid-grid-md-auto",
          "grid-md-true": "MuiGrid-grid-md-true",
          "grid-sm-1": "MuiGrid-grid-sm-1",
          "grid-sm-10": "MuiGrid-grid-sm-10",
          "grid-sm-11": "MuiGrid-grid-sm-11",
          "grid-sm-12": "MuiGrid-grid-sm-12",
          "grid-sm-2": "MuiGrid-grid-sm-2",
          "grid-sm-3": "MuiGrid-grid-sm-3",
          "grid-sm-4": "MuiGrid-grid-sm-4",
          "grid-sm-5": "MuiGrid-grid-sm-5",
          "grid-sm-6": "MuiGrid-grid-sm-6",
          "grid-sm-7": "MuiGrid-grid-sm-7",
          "grid-sm-8": "MuiGrid-grid-sm-8",
          "grid-sm-9": "MuiGrid-grid-sm-9",
          "grid-sm-auto": "MuiGrid-grid-sm-auto",
          "grid-sm-true": "MuiGrid-grid-sm-true",
          "grid-xl-1": "MuiGrid-grid-xl-1",
          "grid-xl-10": "MuiGrid-grid-xl-10",
          "grid-xl-11": "MuiGrid-grid-xl-11",
          "grid-xl-12": "MuiGrid-grid-xl-12",
          "grid-xl-2": "MuiGrid-grid-xl-2",
          "grid-xl-3": "MuiGrid-grid-xl-3",
          "grid-xl-4": "MuiGrid-grid-xl-4",
          "grid-xl-5": "MuiGrid-grid-xl-5",
          "grid-xl-6": "MuiGrid-grid-xl-6",
          "grid-xl-7": "MuiGrid-grid-xl-7",
          "grid-xl-8": "MuiGrid-grid-xl-8",
          "grid-xl-9": "MuiGrid-grid-xl-9",
          "grid-xl-auto": "MuiGrid-grid-xl-auto",
          "grid-xl-true": "MuiGrid-grid-xl-true",
          "grid-xs-1": "MuiGrid-grid-xs-1",
          "grid-xs-10": "MuiGrid-grid-xs-10",
          "grid-xs-11": "MuiGrid-grid-xs-11",
          "grid-xs-12": "MuiGrid-grid-xs-12",
          "grid-xs-2": "MuiGrid-grid-xs-2",
          "grid-xs-3": "MuiGrid-grid-xs-3",
          "grid-xs-4": "MuiGrid-grid-xs-4",
          "grid-xs-5": "MuiGrid-grid-xs-5",
          "grid-xs-6": "MuiGrid-grid-xs-6",
          "grid-xs-7": "MuiGrid-grid-xs-7",
          "grid-xs-8": "MuiGrid-grid-xs-8",
          "grid-xs-9": "MuiGrid-grid-xs-9",
          "grid-xs-auto": "MuiGrid-grid-xs-auto",
          "grid-xs-true": "MuiGrid-grid-xs-true",
          "item": "MuiGrid-item",
          "justify-xs-center": "MuiGrid-justify-xs-center",
          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
          "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
          "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
          "root": "MuiGrid-root",
          "spacing-xs-1": "MuiGrid-spacing-xs-1",
          "spacing-xs-10": "MuiGrid-spacing-xs-10",
          "spacing-xs-2": "MuiGrid-spacing-xs-2",
          "spacing-xs-3": "MuiGrid-spacing-xs-3",
          "spacing-xs-4": "MuiGrid-spacing-xs-4",
          "spacing-xs-5": "MuiGrid-spacing-xs-5",
          "spacing-xs-6": "MuiGrid-spacing-xs-6",
          "spacing-xs-7": "MuiGrid-spacing-xs-7",
          "spacing-xs-8": "MuiGrid-spacing-xs-8",
          "spacing-xs-9": "MuiGrid-spacing-xs-9",
          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
          "zeroMinWidth": "MuiGrid-zeroMinWidth",
        }
      }
      item={true}
    >
      <div
        className="MuiGrid-root makeStyles-messages-3 MuiGrid-item"
      >
        <div
          key="0"
        >
          <WithStyles(ForwardRef(Grid))
            container={true}
          >
            <ForwardRef(Grid)
              classes={
                Object {
                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                  "container": "MuiGrid-container",
                  "direction-xs-column": "MuiGrid-direction-xs-column",
                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                  "grid-lg-1": "MuiGrid-grid-lg-1",
                  "grid-lg-10": "MuiGrid-grid-lg-10",
                  "grid-lg-11": "MuiGrid-grid-lg-11",
                  "grid-lg-12": "MuiGrid-grid-lg-12",
                  "grid-lg-2": "MuiGrid-grid-lg-2",
                  "grid-lg-3": "MuiGrid-grid-lg-3",
                  "grid-lg-4": "MuiGrid-grid-lg-4",
                  "grid-lg-5": "MuiGrid-grid-lg-5",
                  "grid-lg-6": "MuiGrid-grid-lg-6",
                  "grid-lg-7": "MuiGrid-grid-lg-7",
                  "grid-lg-8": "MuiGrid-grid-lg-8",
                  "grid-lg-9": "MuiGrid-grid-lg-9",
                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                  "grid-lg-true": "MuiGrid-grid-lg-true",
                  "grid-md-1": "MuiGrid-grid-md-1",
                  "grid-md-10": "MuiGrid-grid-md-10",
                  "grid-md-11": "MuiGrid-grid-md-11",
                  "grid-md-12": "MuiGrid-grid-md-12",
                  "grid-md-2": "MuiGrid-grid-md-2",
                  "grid-md-3": "MuiGrid-grid-md-3",
                  "grid-md-4": "MuiGrid-grid-md-4",
                  "grid-md-5": "MuiGrid-grid-md-5",
                  "grid-md-6": "MuiGrid-grid-md-6",
                  "grid-md-7": "MuiGrid-grid-md-7",
                  "grid-md-8": "MuiGrid-grid-md-8",
                  "grid-md-9": "MuiGrid-grid-md-9",
                  "grid-md-auto": "MuiGrid-grid-md-auto",
                  "grid-md-true": "MuiGrid-grid-md-true",
                  "grid-sm-1": "MuiGrid-grid-sm-1",
                  "grid-sm-10": "MuiGrid-grid-sm-10",
                  "grid-sm-11": "MuiGrid-grid-sm-11",
                  "grid-sm-12": "MuiGrid-grid-sm-12",
                  "grid-sm-2": "MuiGrid-grid-sm-2",
                  "grid-sm-3": "MuiGrid-grid-sm-3",
                  "grid-sm-4": "MuiGrid-grid-sm-4",
                  "grid-sm-5": "MuiGrid-grid-sm-5",
                  "grid-sm-6": "MuiGrid-grid-sm-6",
                  "grid-sm-7": "MuiGrid-grid-sm-7",
                  "grid-sm-8": "MuiGrid-grid-sm-8",
                  "grid-sm-9": "MuiGrid-grid-sm-9",
                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                  "grid-sm-true": "MuiGrid-grid-sm-true",
                  "grid-xl-1": "MuiGrid-grid-xl-1",
                  "grid-xl-10": "MuiGrid-grid-xl-10",
                  "grid-xl-11": "MuiGrid-grid-xl-11",
                  "grid-xl-12": "MuiGrid-grid-xl-12",
                  "grid-xl-2": "MuiGrid-grid-xl-2",
                  "grid-xl-3": "MuiGrid-grid-xl-3",
                  "grid-xl-4": "MuiGrid-grid-xl-4",
                  "grid-xl-5": "MuiGrid-grid-xl-5",
                  "grid-xl-6": "MuiGrid-grid-xl-6",
                  "grid-xl-7": "MuiGrid-grid-xl-7",
                  "grid-xl-8": "MuiGrid-grid-xl-8",
                  "grid-xl-9": "MuiGrid-grid-xl-9",
                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                  "grid-xl-true": "MuiGrid-grid-xl-true",
                  "grid-xs-1": "MuiGrid-grid-xs-1",
                  "grid-xs-10": "MuiGrid-grid-xs-10",
                  "grid-xs-11": "MuiGrid-grid-xs-11",
                  "grid-xs-12": "MuiGrid-grid-xs-12",
                  "grid-xs-2": "MuiGrid-grid-xs-2",
                  "grid-xs-3": "MuiGrid-grid-xs-3",
                  "grid-xs-4": "MuiGrid-grid-xs-4",
                  "grid-xs-5": "MuiGrid-grid-xs-5",
                  "grid-xs-6": "MuiGrid-grid-xs-6",
                  "grid-xs-7": "MuiGrid-grid-xs-7",
                  "grid-xs-8": "MuiGrid-grid-xs-8",
                  "grid-xs-9": "MuiGrid-grid-xs-9",
                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                  "grid-xs-true": "MuiGrid-grid-xs-true",
                  "item": "MuiGrid-item",
                  "justify-xs-center": "MuiGrid-justify-xs-center",
                  "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                  "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                  "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                  "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                  "root": "MuiGrid-root",
                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                }
              }
              container={true}
            >
              <div
                className="MuiGrid-root MuiGrid-container"
              >
                <Styled(MuiBox)>
                  <div
                    className="MuiBox-root MuiBox-root-35"
                  >
                    <WithStyles(ForwardRef(Avatar))
                      src="/images/default-user.svg"
                      variant="square"
                    >
                      <ForwardRef(Avatar)
                        classes={
                          Object {
                            "circle": "MuiAvatar-circle",
                            "circular": "MuiAvatar-circular",
                            "colorDefault": "MuiAvatar-colorDefault",
                            "fallback": "MuiAvatar-fallback",
                            "img": "MuiAvatar-img",
                            "root": "MuiAvatar-root",
                            "rounded": "MuiAvatar-rounded",
                            "square": "MuiAvatar-square",
                          }
                        }
                        src="/images/default-user.svg"
                        variant="square"
                      >
                        <div
                          className="MuiAvatar-root MuiAvatar-square"
                        >
                          <img
                            className="MuiAvatar-img"
                            src="/images/default-user.svg"
                          />
                        </div>
                      </ForwardRef(Avatar)>
                    </WithStyles(ForwardRef(Avatar))>
                  </div>
                </Styled(MuiBox)>
                <WithStyles(ForwardRef(Typography))
                  className="makeStyles-user-10"
                >
                  <ForwardRef(Typography)
                    className="makeStyles-user-10"
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                  >
                    <p
                      className="MuiTypography-root makeStyles-user-10 MuiTypography-body1"
                    >
                      Unknown
                    </p>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
              </div>
            </ForwardRef(Grid)>
          </WithStyles(ForwardRef(Grid))>
          <MessageContent
            confirmDelete={[Function]}
            confirmUndo={[Function]}
            id="messageContent"
            index={0}
            message={
              Object {
                "channel": "pro.one",
                "message": Object {
                  "file": Object {},
                  "message": Object {
                    "text": "hallelujah",
                  },
                  "text": "hallelujah",
                  "time": "07:05",
                  "timetoken": "16287753052976351",
                  "type": "text",
                },
                "messageType": 4,
                "timetoken": "16287753052976351",
                "uuid": "pn-6f3228b8-32d3-4921-b9eb-af8e96bbde8d",
              }
            }
            toggledVal="chat"
            updateMessage={[Function]}
          >
            <WithStyles(ForwardRef(Grid))
              className="makeStyles-messageContainer-22"
              container={true}
            >
              <ForwardRef(Grid)
                className="makeStyles-messageContainer-22"
                classes={
                  Object {
                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                    "container": "MuiGrid-container",
                    "direction-xs-column": "MuiGrid-direction-xs-column",
                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                    "grid-lg-1": "MuiGrid-grid-lg-1",
                    "grid-lg-10": "MuiGrid-grid-lg-10",
                    "grid-lg-11": "MuiGrid-grid-lg-11",
                    "grid-lg-12": "MuiGrid-grid-lg-12",
                    "grid-lg-2": "MuiGrid-grid-lg-2",
                    "grid-lg-3": "MuiGrid-grid-lg-3",
                    "grid-lg-4": "MuiGrid-grid-lg-4",
                    "grid-lg-5": "MuiGrid-grid-lg-5",
                    "grid-lg-6": "MuiGrid-grid-lg-6",
                    "grid-lg-7": "MuiGrid-grid-lg-7",
                    "grid-lg-8": "MuiGrid-grid-lg-8",
                    "grid-lg-9": "MuiGrid-grid-lg-9",
                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                    "grid-lg-true": "MuiGrid-grid-lg-true",
                    "grid-md-1": "MuiGrid-grid-md-1",
                    "grid-md-10": "MuiGrid-grid-md-10",
                    "grid-md-11": "MuiGrid-grid-md-11",
                    "grid-md-12": "MuiGrid-grid-md-12",
                    "grid-md-2": "MuiGrid-grid-md-2",
                    "grid-md-3": "MuiGrid-grid-md-3",
                    "grid-md-4": "MuiGrid-grid-md-4",
                    "grid-md-5": "MuiGrid-grid-md-5",
                    "grid-md-6": "MuiGrid-grid-md-6",
                    "grid-md-7": "MuiGrid-grid-md-7",
                    "grid-md-8": "MuiGrid-grid-md-8",
                    "grid-md-9": "MuiGrid-grid-md-9",
                    "grid-md-auto": "MuiGrid-grid-md-auto",
                    "grid-md-true": "MuiGrid-grid-md-true",
                    "grid-sm-1": "MuiGrid-grid-sm-1",
                    "grid-sm-10": "MuiGrid-grid-sm-10",
                    "grid-sm-11": "MuiGrid-grid-sm-11",
                    "grid-sm-12": "MuiGrid-grid-sm-12",
                    "grid-sm-2": "MuiGrid-grid-sm-2",
                    "grid-sm-3": "MuiGrid-grid-sm-3",
                    "grid-sm-4": "MuiGrid-grid-sm-4",
                    "grid-sm-5": "MuiGrid-grid-sm-5",
                    "grid-sm-6": "MuiGrid-grid-sm-6",
                    "grid-sm-7": "MuiGrid-grid-sm-7",
                    "grid-sm-8": "MuiGrid-grid-sm-8",
                    "grid-sm-9": "MuiGrid-grid-sm-9",
                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                    "grid-sm-true": "MuiGrid-grid-sm-true",
                    "grid-xl-1": "MuiGrid-grid-xl-1",
                    "grid-xl-10": "MuiGrid-grid-xl-10",
                    "grid-xl-11": "MuiGrid-grid-xl-11",
                    "grid-xl-12": "MuiGrid-grid-xl-12",
                    "grid-xl-2": "MuiGrid-grid-xl-2",
                    "grid-xl-3": "MuiGrid-grid-xl-3",
                    "grid-xl-4": "MuiGrid-grid-xl-4",
                    "grid-xl-5": "MuiGrid-grid-xl-5",
                    "grid-xl-6": "MuiGrid-grid-xl-6",
                    "grid-xl-7": "MuiGrid-grid-xl-7",
                    "grid-xl-8": "MuiGrid-grid-xl-8",
                    "grid-xl-9": "MuiGrid-grid-xl-9",
                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                    "grid-xl-true": "MuiGrid-grid-xl-true",
                    "grid-xs-1": "MuiGrid-grid-xs-1",
                    "grid-xs-10": "MuiGrid-grid-xs-10",
                    "grid-xs-11": "MuiGrid-grid-xs-11",
                    "grid-xs-12": "MuiGrid-grid-xs-12",
                    "grid-xs-2": "MuiGrid-grid-xs-2",
                    "grid-xs-3": "MuiGrid-grid-xs-3",
                    "grid-xs-4": "MuiGrid-grid-xs-4",
                    "grid-xs-5": "MuiGrid-grid-xs-5",
                    "grid-xs-6": "MuiGrid-grid-xs-6",
                    "grid-xs-7": "MuiGrid-grid-xs-7",
                    "grid-xs-8": "MuiGrid-grid-xs-8",
                    "grid-xs-9": "MuiGrid-grid-xs-9",
                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                    "grid-xs-true": "MuiGrid-grid-xs-true",
                    "item": "MuiGrid-item",
                    "justify-xs-center": "MuiGrid-justify-xs-center",
                    "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                    "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                    "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                    "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                    "root": "MuiGrid-root",
                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                  }
                }
                container={true}
              >
                <div
                  className="MuiGrid-root makeStyles-messageContainer-22 MuiGrid-container"
                >
                  <span
                    className="makeStyles-chat-4"
                    style={
                      Object {
                        "backgroundColor": "#EEF3FF",
                      }
                    }
                  />
                  <Styled(MuiBox)
                    ml={2}
                  >
                    <div
                      className="MuiBox-root MuiBox-root-36"
                    >
                      <WithStyles(WithStyles(ForwardRef(Tooltip)))
                        title="Edit"
                      >
                        <WithStyles(ForwardRef(Tooltip))
                          classes={
                            Object {
                              "tooltip": "WithStyles(ForwardRef(Tooltip))-tooltip-37",
                            }
                          }
                          title="Edit"
                        >
                          <ForwardRef(Tooltip)
                            classes={
                              Object {
                                "arrow": "MuiTooltip-arrow",
                                "popper": "MuiTooltip-popper",
                                "popperArrow": "MuiTooltip-popperArrow",
                                "popperInteractive": "MuiTooltip-popperInteractive",
                                "tooltip": "MuiTooltip-tooltip WithStyles(ForwardRef(Tooltip))-tooltip-37",
                                "tooltipArrow": "MuiTooltip-tooltipArrow",
                                "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                "touch": "MuiTooltip-touch",
                              }
                            }
                            title="Edit"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              aria-describedby={null}
                              className=""
                              edge="start"
                              id="updateIcon"
                              label="edit"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onMouseLeave={[Function]}
                              onMouseOver={[Function]}
                              onTouchEnd={[Function]}
                              onTouchStart={[Function]}
                              title="Edit"
                            >
                              <ForwardRef(IconButton)
                                aria-describedby={null}
                                className=""
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                edge="start"
                                id="updateIcon"
                                label="edit"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseLeave={[Function]}
                                onMouseOver={[Function]}
                                onTouchEnd={[Function]}
                                onTouchStart={[Function]}
                                title="Edit"
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  aria-describedby={null}
                                  centerRipple={true}
                                  className="MuiIconButton-root MuiIconButton-edgeStart"
                                  disabled={false}
                                  focusRipple={true}
                                  id="updateIcon"
                                  label="edit"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseOver={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title="Edit"
                                >
                                  <ForwardRef(ButtonBase)
                                    aria-describedby={null}
                                    centerRipple={true}
                                    className="MuiIconButton-root MuiIconButton-edgeStart"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    id="updateIcon"
                                    label="edit"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseOver={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchStart={[Function]}
                                    title="Edit"
                                  >
                                    <button
                                      aria-describedby={null}
                                      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-edgeStart"
                                      disabled={false}
                                      id="updateIcon"
                                      label="edit"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseOver={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={0}
                                      title="Edit"
                                      type="button"
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <img
                                          alt="edit"
                                          src="/images/edit-message.svg"
                                        />
                                      </span>
                                      <WithStyles(memo)
                                        center={true}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={true}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                            <ForwardRef(Popper)
                              anchorEl={
                                <button
                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-edgeStart"
                                  id="updateIcon"
                                  label="edit"
                                  tabindex="0"
                                  title="Edit"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <img
                                      alt="edit"
                                      src="/images/edit-message.svg"
                                    />
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                              }
                              className="MuiTooltip-popper"
                              id={null}
                              open={false}
                              placement="bottom"
                              popperOptions={
                                Object {
                                  "modifiers": Object {
                                    "arrow": Object {
                                      "element": null,
                                      "enabled": false,
                                    },
                                  },
                                }
                              }
                              transition={true}
                            />
                          </ForwardRef(Tooltip)>
                        </WithStyles(ForwardRef(Tooltip))>
                      </WithStyles(WithStyles(ForwardRef(Tooltip)))>
                      <WithStyles(WithStyles(ForwardRef(Tooltip)))
                        title="Delete"
                      >
                        <WithStyles(ForwardRef(Tooltip))
                          classes={
                            Object {
                              "tooltip": "WithStyles(ForwardRef(Tooltip))-tooltip-37",
                            }
                          }
                          title="Delete"
                        >
                          <ForwardRef(Tooltip)
                            classes={
                              Object {
                                "arrow": "MuiTooltip-arrow",
                                "popper": "MuiTooltip-popper",
                                "popperArrow": "MuiTooltip-popperArrow",
                                "popperInteractive": "MuiTooltip-popperInteractive",
                                "tooltip": "MuiTooltip-tooltip WithStyles(ForwardRef(Tooltip))-tooltip-37",
                                "tooltipArrow": "MuiTooltip-tooltipArrow",
                                "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                "touch": "MuiTooltip-touch",
                              }
                            }
                            title="Delete"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              aria-describedby={null}
                              className=""
                              edge="start"
                              id="deleteIcon"
                              label="delete"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onMouseLeave={[Function]}
                              onMouseOver={[Function]}
                              onTouchEnd={[Function]}
                              onTouchStart={[Function]}
                              title="Delete"
                            >
                              <ForwardRef(IconButton)
                                aria-describedby={null}
                                className=""
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                edge="start"
                                id="deleteIcon"
                                label="delete"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseLeave={[Function]}
                                onMouseOver={[Function]}
                                onTouchEnd={[Function]}
                                onTouchStart={[Function]}
                                title="Delete"
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  aria-describedby={null}
                                  centerRipple={true}
                                  className="MuiIconButton-root MuiIconButton-edgeStart"
                                  disabled={false}
                                  focusRipple={true}
                                  id="deleteIcon"
                                  label="delete"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseOver={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title="Delete"
                                >
                                  <ForwardRef(ButtonBase)
                                    aria-describedby={null}
                                    centerRipple={true}
                                    className="MuiIconButton-root MuiIconButton-edgeStart"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    id="deleteIcon"
                                    label="delete"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseOver={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchStart={[Function]}
                                    title="Delete"
                                  >
                                    <button
                                      aria-describedby={null}
                                      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-edgeStart"
                                      disabled={false}
                                      id="deleteIcon"
                                      label="delete"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseOver={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={0}
                                      title="Delete"
                                      type="button"
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <img
                                          alt="delete"
                                          src="/images/delete-message.svg"
                                        />
                                      </span>
                                      <WithStyles(memo)
                                        center={true}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={true}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                            <ForwardRef(Popper)
                              anchorEl={
                                <button
                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-edgeStart"
                                  id="deleteIcon"
                                  label="delete"
                                  tabindex="0"
                                  title="Delete"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <img
                                      alt="delete"
                                      src="/images/delete-message.svg"
                                    />
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                              }
                              className="MuiTooltip-popper"
                              id={null}
                              open={false}
                              placement="bottom"
                              popperOptions={
                                Object {
                                  "modifiers": Object {
                                    "arrow": Object {
                                      "element": null,
                                      "enabled": false,
                                    },
                                  },
                                }
                              }
                              transition={true}
                            />
                          </ForwardRef(Tooltip)>
                        </WithStyles(ForwardRef(Tooltip))>
                      </WithStyles(WithStyles(ForwardRef(Tooltip)))>
                    </div>
                  </Styled(MuiBox)>
                </div>
              </ForwardRef(Grid)>
            </WithStyles(ForwardRef(Grid))>
          </MessageContent>
          <WithStyles(ForwardRef(Typography))
            className="makeStyles-timeField-8"
          >
            <ForwardRef(Typography)
              className="makeStyles-timeField-8"
              classes={
                Object {
                  "alignCenter": "MuiTypography-alignCenter",
                  "alignJustify": "MuiTypography-alignJustify",
                  "alignLeft": "MuiTypography-alignLeft",
                  "alignRight": "MuiTypography-alignRight",
                  "body1": "MuiTypography-body1",
                  "body2": "MuiTypography-body2",
                  "button": "MuiTypography-button",
                  "caption": "MuiTypography-caption",
                  "colorError": "MuiTypography-colorError",
                  "colorInherit": "MuiTypography-colorInherit",
                  "colorPrimary": "MuiTypography-colorPrimary",
                  "colorSecondary": "MuiTypography-colorSecondary",
                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                  "displayBlock": "MuiTypography-displayBlock",
                  "displayInline": "MuiTypography-displayInline",
                  "gutterBottom": "MuiTypography-gutterBottom",
                  "h1": "MuiTypography-h1",
                  "h2": "MuiTypography-h2",
                  "h3": "MuiTypography-h3",
                  "h4": "MuiTypography-h4",
                  "h5": "MuiTypography-h5",
                  "h6": "MuiTypography-h6",
                  "noWrap": "MuiTypography-noWrap",
                  "overline": "MuiTypography-overline",
                  "paragraph": "MuiTypography-paragraph",
                  "root": "MuiTypography-root",
                  "srOnly": "MuiTypography-srOnly",
                  "subtitle1": "MuiTypography-subtitle1",
                  "subtitle2": "MuiTypography-subtitle2",
                }
              }
            >
              <p
                className="MuiTypography-root makeStyles-timeField-8 MuiTypography-body1"
              />
            </ForwardRef(Typography)>
          </WithStyles(ForwardRef(Typography))>
        </div>
        <div
          key="1"
        >
          <WithStyles(ForwardRef(Grid))
            container={true}
          >
            <ForwardRef(Grid)
              classes={
                Object {
                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                  "container": "MuiGrid-container",
                  "direction-xs-column": "MuiGrid-direction-xs-column",
                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                  "grid-lg-1": "MuiGrid-grid-lg-1",
                  "grid-lg-10": "MuiGrid-grid-lg-10",
                  "grid-lg-11": "MuiGrid-grid-lg-11",
                  "grid-lg-12": "MuiGrid-grid-lg-12",
                  "grid-lg-2": "MuiGrid-grid-lg-2",
                  "grid-lg-3": "MuiGrid-grid-lg-3",
                  "grid-lg-4": "MuiGrid-grid-lg-4",
                  "grid-lg-5": "MuiGrid-grid-lg-5",
                  "grid-lg-6": "MuiGrid-grid-lg-6",
                  "grid-lg-7": "MuiGrid-grid-lg-7",
                  "grid-lg-8": "MuiGrid-grid-lg-8",
                  "grid-lg-9": "MuiGrid-grid-lg-9",
                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                  "grid-lg-true": "MuiGrid-grid-lg-true",
                  "grid-md-1": "MuiGrid-grid-md-1",
                  "grid-md-10": "MuiGrid-grid-md-10",
                  "grid-md-11": "MuiGrid-grid-md-11",
                  "grid-md-12": "MuiGrid-grid-md-12",
                  "grid-md-2": "MuiGrid-grid-md-2",
                  "grid-md-3": "MuiGrid-grid-md-3",
                  "grid-md-4": "MuiGrid-grid-md-4",
                  "grid-md-5": "MuiGrid-grid-md-5",
                  "grid-md-6": "MuiGrid-grid-md-6",
                  "grid-md-7": "MuiGrid-grid-md-7",
                  "grid-md-8": "MuiGrid-grid-md-8",
                  "grid-md-9": "MuiGrid-grid-md-9",
                  "grid-md-auto": "MuiGrid-grid-md-auto",
                  "grid-md-true": "MuiGrid-grid-md-true",
                  "grid-sm-1": "MuiGrid-grid-sm-1",
                  "grid-sm-10": "MuiGrid-grid-sm-10",
                  "grid-sm-11": "MuiGrid-grid-sm-11",
                  "grid-sm-12": "MuiGrid-grid-sm-12",
                  "grid-sm-2": "MuiGrid-grid-sm-2",
                  "grid-sm-3": "MuiGrid-grid-sm-3",
                  "grid-sm-4": "MuiGrid-grid-sm-4",
                  "grid-sm-5": "MuiGrid-grid-sm-5",
                  "grid-sm-6": "MuiGrid-grid-sm-6",
                  "grid-sm-7": "MuiGrid-grid-sm-7",
                  "grid-sm-8": "MuiGrid-grid-sm-8",
                  "grid-sm-9": "MuiGrid-grid-sm-9",
                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                  "grid-sm-true": "MuiGrid-grid-sm-true",
                  "grid-xl-1": "MuiGrid-grid-xl-1",
                  "grid-xl-10": "MuiGrid-grid-xl-10",
                  "grid-xl-11": "MuiGrid-grid-xl-11",
                  "grid-xl-12": "MuiGrid-grid-xl-12",
                  "grid-xl-2": "MuiGrid-grid-xl-2",
                  "grid-xl-3": "MuiGrid-grid-xl-3",
                  "grid-xl-4": "MuiGrid-grid-xl-4",
                  "grid-xl-5": "MuiGrid-grid-xl-5",
                  "grid-xl-6": "MuiGrid-grid-xl-6",
                  "grid-xl-7": "MuiGrid-grid-xl-7",
                  "grid-xl-8": "MuiGrid-grid-xl-8",
                  "grid-xl-9": "MuiGrid-grid-xl-9",
                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                  "grid-xl-true": "MuiGrid-grid-xl-true",
                  "grid-xs-1": "MuiGrid-grid-xs-1",
                  "grid-xs-10": "MuiGrid-grid-xs-10",
                  "grid-xs-11": "MuiGrid-grid-xs-11",
                  "grid-xs-12": "MuiGrid-grid-xs-12",
                  "grid-xs-2": "MuiGrid-grid-xs-2",
                  "grid-xs-3": "MuiGrid-grid-xs-3",
                  "grid-xs-4": "MuiGrid-grid-xs-4",
                  "grid-xs-5": "MuiGrid-grid-xs-5",
                  "grid-xs-6": "MuiGrid-grid-xs-6",
                  "grid-xs-7": "MuiGrid-grid-xs-7",
                  "grid-xs-8": "MuiGrid-grid-xs-8",
                  "grid-xs-9": "MuiGrid-grid-xs-9",
                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                  "grid-xs-true": "MuiGrid-grid-xs-true",
                  "item": "MuiGrid-item",
                  "justify-xs-center": "MuiGrid-justify-xs-center",
                  "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                  "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                  "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                  "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                  "root": "MuiGrid-root",
                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                }
              }
              container={true}
            >
              <div
                className="MuiGrid-root MuiGrid-container"
              >
                <Styled(MuiBox)>
                  <div
                    className="MuiBox-root MuiBox-root-38"
                  >
                    <WithStyles(ForwardRef(Avatar))
                      src="/images/default-user.svg"
                      variant="square"
                    >
                      <ForwardRef(Avatar)
                        classes={
                          Object {
                            "circle": "MuiAvatar-circle",
                            "circular": "MuiAvatar-circular",
                            "colorDefault": "MuiAvatar-colorDefault",
                            "fallback": "MuiAvatar-fallback",
                            "img": "MuiAvatar-img",
                            "root": "MuiAvatar-root",
                            "rounded": "MuiAvatar-rounded",
                            "square": "MuiAvatar-square",
                          }
                        }
                        src="/images/default-user.svg"
                        variant="square"
                      >
                        <div
                          className="MuiAvatar-root MuiAvatar-square"
                        >
                          <img
                            className="MuiAvatar-img"
                            src="/images/default-user.svg"
                          />
                        </div>
                      </ForwardRef(Avatar)>
                    </WithStyles(ForwardRef(Avatar))>
                  </div>
                </Styled(MuiBox)>
                <WithStyles(ForwardRef(Typography))
                  className="makeStyles-user-10"
                >
                  <ForwardRef(Typography)
                    className="makeStyles-user-10"
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                  >
                    <p
                      className="MuiTypography-root makeStyles-user-10 MuiTypography-body1"
                    >
                      Unknown
                    </p>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
              </div>
            </ForwardRef(Grid)>
          </WithStyles(ForwardRef(Grid))>
          <MessageContent
            confirmDelete={[Function]}
            confirmUndo={[Function]}
            id="messageContent"
            index={1}
            message={
              Object {
                "channel": "pro.one",
                "message": Object {
                  "file": Object {},
                  "message": Object {
                    "text": "hallelujah",
                  },
                  "text": "hallelujah",
                  "time": "07:25",
                  "timetoken": "16287765563258261",
                  "type": "text",
                },
                "messageType": 4,
                "timetoken": "16287765563258261",
                "uuid": "pn-6f3228b8-32d3-4921-b9eb-af8e96bbde8d",
              }
            }
            toggledVal="chat"
            updateMessage={[Function]}
          >
            <WithStyles(ForwardRef(Grid))
              className="makeStyles-messageContainer-22"
              container={true}
            >
              <ForwardRef(Grid)
                className="makeStyles-messageContainer-22"
                classes={
                  Object {
                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                    "container": "MuiGrid-container",
                    "direction-xs-column": "MuiGrid-direction-xs-column",
                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                    "grid-lg-1": "MuiGrid-grid-lg-1",
                    "grid-lg-10": "MuiGrid-grid-lg-10",
                    "grid-lg-11": "MuiGrid-grid-lg-11",
                    "grid-lg-12": "MuiGrid-grid-lg-12",
                    "grid-lg-2": "MuiGrid-grid-lg-2",
                    "grid-lg-3": "MuiGrid-grid-lg-3",
                    "grid-lg-4": "MuiGrid-grid-lg-4",
                    "grid-lg-5": "MuiGrid-grid-lg-5",
                    "grid-lg-6": "MuiGrid-grid-lg-6",
                    "grid-lg-7": "MuiGrid-grid-lg-7",
                    "grid-lg-8": "MuiGrid-grid-lg-8",
                    "grid-lg-9": "MuiGrid-grid-lg-9",
                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                    "grid-lg-true": "MuiGrid-grid-lg-true",
                    "grid-md-1": "MuiGrid-grid-md-1",
                    "grid-md-10": "MuiGrid-grid-md-10",
                    "grid-md-11": "MuiGrid-grid-md-11",
                    "grid-md-12": "MuiGrid-grid-md-12",
                    "grid-md-2": "MuiGrid-grid-md-2",
                    "grid-md-3": "MuiGrid-grid-md-3",
                    "grid-md-4": "MuiGrid-grid-md-4",
                    "grid-md-5": "MuiGrid-grid-md-5",
                    "grid-md-6": "MuiGrid-grid-md-6",
                    "grid-md-7": "MuiGrid-grid-md-7",
                    "grid-md-8": "MuiGrid-grid-md-8",
                    "grid-md-9": "MuiGrid-grid-md-9",
                    "grid-md-auto": "MuiGrid-grid-md-auto",
                    "grid-md-true": "MuiGrid-grid-md-true",
                    "grid-sm-1": "MuiGrid-grid-sm-1",
                    "grid-sm-10": "MuiGrid-grid-sm-10",
                    "grid-sm-11": "MuiGrid-grid-sm-11",
                    "grid-sm-12": "MuiGrid-grid-sm-12",
                    "grid-sm-2": "MuiGrid-grid-sm-2",
                    "grid-sm-3": "MuiGrid-grid-sm-3",
                    "grid-sm-4": "MuiGrid-grid-sm-4",
                    "grid-sm-5": "MuiGrid-grid-sm-5",
                    "grid-sm-6": "MuiGrid-grid-sm-6",
                    "grid-sm-7": "MuiGrid-grid-sm-7",
                    "grid-sm-8": "MuiGrid-grid-sm-8",
                    "grid-sm-9": "MuiGrid-grid-sm-9",
                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                    "grid-sm-true": "MuiGrid-grid-sm-true",
                    "grid-xl-1": "MuiGrid-grid-xl-1",
                    "grid-xl-10": "MuiGrid-grid-xl-10",
                    "grid-xl-11": "MuiGrid-grid-xl-11",
                    "grid-xl-12": "MuiGrid-grid-xl-12",
                    "grid-xl-2": "MuiGrid-grid-xl-2",
                    "grid-xl-3": "MuiGrid-grid-xl-3",
                    "grid-xl-4": "MuiGrid-grid-xl-4",
                    "grid-xl-5": "MuiGrid-grid-xl-5",
                    "grid-xl-6": "MuiGrid-grid-xl-6",
                    "grid-xl-7": "MuiGrid-grid-xl-7",
                    "grid-xl-8": "MuiGrid-grid-xl-8",
                    "grid-xl-9": "MuiGrid-grid-xl-9",
                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                    "grid-xl-true": "MuiGrid-grid-xl-true",
                    "grid-xs-1": "MuiGrid-grid-xs-1",
                    "grid-xs-10": "MuiGrid-grid-xs-10",
                    "grid-xs-11": "MuiGrid-grid-xs-11",
                    "grid-xs-12": "MuiGrid-grid-xs-12",
                    "grid-xs-2": "MuiGrid-grid-xs-2",
                    "grid-xs-3": "MuiGrid-grid-xs-3",
                    "grid-xs-4": "MuiGrid-grid-xs-4",
                    "grid-xs-5": "MuiGrid-grid-xs-5",
                    "grid-xs-6": "MuiGrid-grid-xs-6",
                    "grid-xs-7": "MuiGrid-grid-xs-7",
                    "grid-xs-8": "MuiGrid-grid-xs-8",
                    "grid-xs-9": "MuiGrid-grid-xs-9",
                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                    "grid-xs-true": "MuiGrid-grid-xs-true",
                    "item": "MuiGrid-item",
                    "justify-xs-center": "MuiGrid-justify-xs-center",
                    "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                    "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                    "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                    "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                    "root": "MuiGrid-root",
                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                  }
                }
                container={true}
              >
                <div
                  className="MuiGrid-root makeStyles-messageContainer-22 MuiGrid-container"
                >
                  <span
                    className="makeStyles-chat-4"
                    style={
                      Object {
                        "backgroundColor": "#FFFFFF",
                      }
                    }
                  />
                  <Styled(MuiBox)
                    ml={2}
                  >
                    <div
                      className="MuiBox-root MuiBox-root-39"
                    >
                      <WithStyles(WithStyles(ForwardRef(Tooltip)))
                        title="Edit"
                      >
                        <WithStyles(ForwardRef(Tooltip))
                          classes={
                            Object {
                              "tooltip": "WithStyles(ForwardRef(Tooltip))-tooltip-37",
                            }
                          }
                          title="Edit"
                        >
                          <ForwardRef(Tooltip)
                            classes={
                              Object {
                                "arrow": "MuiTooltip-arrow",
                                "popper": "MuiTooltip-popper",
                                "popperArrow": "MuiTooltip-popperArrow",
                                "popperInteractive": "MuiTooltip-popperInteractive",
                                "tooltip": "MuiTooltip-tooltip WithStyles(ForwardRef(Tooltip))-tooltip-37",
                                "tooltipArrow": "MuiTooltip-tooltipArrow",
                                "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                "touch": "MuiTooltip-touch",
                              }
                            }
                            title="Edit"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              aria-describedby={null}
                              className=""
                              edge="start"
                              id="updateIcon"
                              label="edit"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onMouseLeave={[Function]}
                              onMouseOver={[Function]}
                              onTouchEnd={[Function]}
                              onTouchStart={[Function]}
                              title="Edit"
                            >
                              <ForwardRef(IconButton)
                                aria-describedby={null}
                                className=""
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                edge="start"
                                id="updateIcon"
                                label="edit"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseLeave={[Function]}
                                onMouseOver={[Function]}
                                onTouchEnd={[Function]}
                                onTouchStart={[Function]}
                                title="Edit"
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  aria-describedby={null}
                                  centerRipple={true}
                                  className="MuiIconButton-root MuiIconButton-edgeStart"
                                  disabled={false}
                                  focusRipple={true}
                                  id="updateIcon"
                                  label="edit"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseOver={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title="Edit"
                                >
                                  <ForwardRef(ButtonBase)
                                    aria-describedby={null}
                                    centerRipple={true}
                                    className="MuiIconButton-root MuiIconButton-edgeStart"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    id="updateIcon"
                                    label="edit"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseOver={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchStart={[Function]}
                                    title="Edit"
                                  >
                                    <button
                                      aria-describedby={null}
                                      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-edgeStart"
                                      disabled={false}
                                      id="updateIcon"
                                      label="edit"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseOver={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={0}
                                      title="Edit"
                                      type="button"
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <img
                                          alt="edit"
                                          src="/images/edit-message.svg"
                                        />
                                      </span>
                                      <WithStyles(memo)
                                        center={true}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={true}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                            <ForwardRef(Popper)
                              anchorEl={
                                <button
                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-edgeStart"
                                  id="updateIcon"
                                  label="edit"
                                  tabindex="0"
                                  title="Edit"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <img
                                      alt="edit"
                                      src="/images/edit-message.svg"
                                    />
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                              }
                              className="MuiTooltip-popper"
                              id={null}
                              open={false}
                              placement="bottom"
                              popperOptions={
                                Object {
                                  "modifiers": Object {
                                    "arrow": Object {
                                      "element": null,
                                      "enabled": false,
                                    },
                                  },
                                }
                              }
                              transition={true}
                            />
                          </ForwardRef(Tooltip)>
                        </WithStyles(ForwardRef(Tooltip))>
                      </WithStyles(WithStyles(ForwardRef(Tooltip)))>
                      <WithStyles(WithStyles(ForwardRef(Tooltip)))
                        title="Delete"
                      >
                        <WithStyles(ForwardRef(Tooltip))
                          classes={
                            Object {
                              "tooltip": "WithStyles(ForwardRef(Tooltip))-tooltip-37",
                            }
                          }
                          title="Delete"
                        >
                          <ForwardRef(Tooltip)
                            classes={
                              Object {
                                "arrow": "MuiTooltip-arrow",
                                "popper": "MuiTooltip-popper",
                                "popperArrow": "MuiTooltip-popperArrow",
                                "popperInteractive": "MuiTooltip-popperInteractive",
                                "tooltip": "MuiTooltip-tooltip WithStyles(ForwardRef(Tooltip))-tooltip-37",
                                "tooltipArrow": "MuiTooltip-tooltipArrow",
                                "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                "touch": "MuiTooltip-touch",
                              }
                            }
                            title="Delete"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              aria-describedby={null}
                              className=""
                              edge="start"
                              id="deleteIcon"
                              label="delete"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onMouseLeave={[Function]}
                              onMouseOver={[Function]}
                              onTouchEnd={[Function]}
                              onTouchStart={[Function]}
                              title="Delete"
                            >
                              <ForwardRef(IconButton)
                                aria-describedby={null}
                                className=""
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                edge="start"
                                id="deleteIcon"
                                label="delete"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseLeave={[Function]}
                                onMouseOver={[Function]}
                                onTouchEnd={[Function]}
                                onTouchStart={[Function]}
                                title="Delete"
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  aria-describedby={null}
                                  centerRipple={true}
                                  className="MuiIconButton-root MuiIconButton-edgeStart"
                                  disabled={false}
                                  focusRipple={true}
                                  id="deleteIcon"
                                  label="delete"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseOver={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title="Delete"
                                >
                                  <ForwardRef(ButtonBase)
                                    aria-describedby={null}
                                    centerRipple={true}
                                    className="MuiIconButton-root MuiIconButton-edgeStart"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    id="deleteIcon"
                                    label="delete"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseOver={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchStart={[Function]}
                                    title="Delete"
                                  >
                                    <button
                                      aria-describedby={null}
                                      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-edgeStart"
                                      disabled={false}
                                      id="deleteIcon"
                                      label="delete"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseOver={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={0}
                                      title="Delete"
                                      type="button"
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <img
                                          alt="delete"
                                          src="/images/delete-message.svg"
                                        />
                                      </span>
                                      <WithStyles(memo)
                                        center={true}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={true}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                            <ForwardRef(Popper)
                              anchorEl={
                                <button
                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-edgeStart"
                                  id="deleteIcon"
                                  label="delete"
                                  tabindex="0"
                                  title="Delete"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <img
                                      alt="delete"
                                      src="/images/delete-message.svg"
                                    />
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                              }
                              className="MuiTooltip-popper"
                              id={null}
                              open={false}
                              placement="bottom"
                              popperOptions={
                                Object {
                                  "modifiers": Object {
                                    "arrow": Object {
                                      "element": null,
                                      "enabled": false,
                                    },
                                  },
                                }
                              }
                              transition={true}
                            />
                          </ForwardRef(Tooltip)>
                        </WithStyles(ForwardRef(Tooltip))>
                      </WithStyles(WithStyles(ForwardRef(Tooltip)))>
                    </div>
                  </Styled(MuiBox)>
                </div>
              </ForwardRef(Grid)>
            </WithStyles(ForwardRef(Grid))>
          </MessageContent>
          <WithStyles(ForwardRef(Typography))
            className="makeStyles-timeField-8"
          >
            <ForwardRef(Typography)
              className="makeStyles-timeField-8"
              classes={
                Object {
                  "alignCenter": "MuiTypography-alignCenter",
                  "alignJustify": "MuiTypography-alignJustify",
                  "alignLeft": "MuiTypography-alignLeft",
                  "alignRight": "MuiTypography-alignRight",
                  "body1": "MuiTypography-body1",
                  "body2": "MuiTypography-body2",
                  "button": "MuiTypography-button",
                  "caption": "MuiTypography-caption",
                  "colorError": "MuiTypography-colorError",
                  "colorInherit": "MuiTypography-colorInherit",
                  "colorPrimary": "MuiTypography-colorPrimary",
                  "colorSecondary": "MuiTypography-colorSecondary",
                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                  "displayBlock": "MuiTypography-displayBlock",
                  "displayInline": "MuiTypography-displayInline",
                  "gutterBottom": "MuiTypography-gutterBottom",
                  "h1": "MuiTypography-h1",
                  "h2": "MuiTypography-h2",
                  "h3": "MuiTypography-h3",
                  "h4": "MuiTypography-h4",
                  "h5": "MuiTypography-h5",
                  "h6": "MuiTypography-h6",
                  "noWrap": "MuiTypography-noWrap",
                  "overline": "MuiTypography-overline",
                  "paragraph": "MuiTypography-paragraph",
                  "root": "MuiTypography-root",
                  "srOnly": "MuiTypography-srOnly",
                  "subtitle1": "MuiTypography-subtitle1",
                  "subtitle2": "MuiTypography-subtitle2",
                }
              }
            >
              <p
                className="MuiTypography-root makeStyles-timeField-8 MuiTypography-body1"
              />
            </ForwardRef(Typography)>
          </WithStyles(ForwardRef(Typography))>
        </div>
        <div
          key="2"
        >
          <WithStyles(ForwardRef(Grid))
            container={true}
          >
            <ForwardRef(Grid)
              classes={
                Object {
                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                  "container": "MuiGrid-container",
                  "direction-xs-column": "MuiGrid-direction-xs-column",
                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                  "grid-lg-1": "MuiGrid-grid-lg-1",
                  "grid-lg-10": "MuiGrid-grid-lg-10",
                  "grid-lg-11": "MuiGrid-grid-lg-11",
                  "grid-lg-12": "MuiGrid-grid-lg-12",
                  "grid-lg-2": "MuiGrid-grid-lg-2",
                  "grid-lg-3": "MuiGrid-grid-lg-3",
                  "grid-lg-4": "MuiGrid-grid-lg-4",
                  "grid-lg-5": "MuiGrid-grid-lg-5",
                  "grid-lg-6": "MuiGrid-grid-lg-6",
                  "grid-lg-7": "MuiGrid-grid-lg-7",
                  "grid-lg-8": "MuiGrid-grid-lg-8",
                  "grid-lg-9": "MuiGrid-grid-lg-9",
                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                  "grid-lg-true": "MuiGrid-grid-lg-true",
                  "grid-md-1": "MuiGrid-grid-md-1",
                  "grid-md-10": "MuiGrid-grid-md-10",
                  "grid-md-11": "MuiGrid-grid-md-11",
                  "grid-md-12": "MuiGrid-grid-md-12",
                  "grid-md-2": "MuiGrid-grid-md-2",
                  "grid-md-3": "MuiGrid-grid-md-3",
                  "grid-md-4": "MuiGrid-grid-md-4",
                  "grid-md-5": "MuiGrid-grid-md-5",
                  "grid-md-6": "MuiGrid-grid-md-6",
                  "grid-md-7": "MuiGrid-grid-md-7",
                  "grid-md-8": "MuiGrid-grid-md-8",
                  "grid-md-9": "MuiGrid-grid-md-9",
                  "grid-md-auto": "MuiGrid-grid-md-auto",
                  "grid-md-true": "MuiGrid-grid-md-true",
                  "grid-sm-1": "MuiGrid-grid-sm-1",
                  "grid-sm-10": "MuiGrid-grid-sm-10",
                  "grid-sm-11": "MuiGrid-grid-sm-11",
                  "grid-sm-12": "MuiGrid-grid-sm-12",
                  "grid-sm-2": "MuiGrid-grid-sm-2",
                  "grid-sm-3": "MuiGrid-grid-sm-3",
                  "grid-sm-4": "MuiGrid-grid-sm-4",
                  "grid-sm-5": "MuiGrid-grid-sm-5",
                  "grid-sm-6": "MuiGrid-grid-sm-6",
                  "grid-sm-7": "MuiGrid-grid-sm-7",
                  "grid-sm-8": "MuiGrid-grid-sm-8",
                  "grid-sm-9": "MuiGrid-grid-sm-9",
                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                  "grid-sm-true": "MuiGrid-grid-sm-true",
                  "grid-xl-1": "MuiGrid-grid-xl-1",
                  "grid-xl-10": "MuiGrid-grid-xl-10",
                  "grid-xl-11": "MuiGrid-grid-xl-11",
                  "grid-xl-12": "MuiGrid-grid-xl-12",
                  "grid-xl-2": "MuiGrid-grid-xl-2",
                  "grid-xl-3": "MuiGrid-grid-xl-3",
                  "grid-xl-4": "MuiGrid-grid-xl-4",
                  "grid-xl-5": "MuiGrid-grid-xl-5",
                  "grid-xl-6": "MuiGrid-grid-xl-6",
                  "grid-xl-7": "MuiGrid-grid-xl-7",
                  "grid-xl-8": "MuiGrid-grid-xl-8",
                  "grid-xl-9": "MuiGrid-grid-xl-9",
                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                  "grid-xl-true": "MuiGrid-grid-xl-true",
                  "grid-xs-1": "MuiGrid-grid-xs-1",
                  "grid-xs-10": "MuiGrid-grid-xs-10",
                  "grid-xs-11": "MuiGrid-grid-xs-11",
                  "grid-xs-12": "MuiGrid-grid-xs-12",
                  "grid-xs-2": "MuiGrid-grid-xs-2",
                  "grid-xs-3": "MuiGrid-grid-xs-3",
                  "grid-xs-4": "MuiGrid-grid-xs-4",
                  "grid-xs-5": "MuiGrid-grid-xs-5",
                  "grid-xs-6": "MuiGrid-grid-xs-6",
                  "grid-xs-7": "MuiGrid-grid-xs-7",
                  "grid-xs-8": "MuiGrid-grid-xs-8",
                  "grid-xs-9": "MuiGrid-grid-xs-9",
                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                  "grid-xs-true": "MuiGrid-grid-xs-true",
                  "item": "MuiGrid-item",
                  "justify-xs-center": "MuiGrid-justify-xs-center",
                  "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                  "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                  "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                  "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                  "root": "MuiGrid-root",
                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                }
              }
              container={true}
            >
              <div
                className="MuiGrid-root MuiGrid-container"
              >
                <Styled(MuiBox)>
                  <div
                    className="MuiBox-root MuiBox-root-40"
                  >
                    <WithStyles(ForwardRef(Avatar))
                      src="/images/default-user.svg"
                      variant="square"
                    >
                      <ForwardRef(Avatar)
                        classes={
                          Object {
                            "circle": "MuiAvatar-circle",
                            "circular": "MuiAvatar-circular",
                            "colorDefault": "MuiAvatar-colorDefault",
                            "fallback": "MuiAvatar-fallback",
                            "img": "MuiAvatar-img",
                            "root": "MuiAvatar-root",
                            "rounded": "MuiAvatar-rounded",
                            "square": "MuiAvatar-square",
                          }
                        }
                        src="/images/default-user.svg"
                        variant="square"
                      >
                        <div
                          className="MuiAvatar-root MuiAvatar-square"
                        >
                          <img
                            className="MuiAvatar-img"
                            src="/images/default-user.svg"
                          />
                        </div>
                      </ForwardRef(Avatar)>
                    </WithStyles(ForwardRef(Avatar))>
                  </div>
                </Styled(MuiBox)>
                <WithStyles(ForwardRef(Typography))
                  className="makeStyles-user-10"
                >
                  <ForwardRef(Typography)
                    className="makeStyles-user-10"
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                  >
                    <p
                      className="MuiTypography-root makeStyles-user-10 MuiTypography-body1"
                    >
                      Unknown
                    </p>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
              </div>
            </ForwardRef(Grid)>
          </WithStyles(ForwardRef(Grid))>
          <MessageContent
            confirmDelete={[Function]}
            confirmUndo={[Function]}
            id="messageContent"
            index={2}
            message={
              Object {
                "channel": "pro.one",
                "message": Object {
                  "file": Object {
                    "id": "15bef783-2c5d-43f1-942a-52894d5246fb",
                    "name": "self1.jpeg",
                    "url": "https://ps.pndsn.com/v1/files/sub-c-1335d6e8-a993-11eb-9cd5-b6e2b128ec2a/channels/pro.one/files/15bef783-2c5d-43f1-942a-52894d5246fb/self1.jpeg",
                  },
                  "image": "https://ps.pndsn.com/v1/files/sub-c-1335d6e8-a993-11eb-9cd5-b6e2b128ec2a/channels/pro.one/files/15bef783-2c5d-43f1-942a-52894d5246fb/self1.jpeg",
                  "message": Object {
                    "text": "hallelujah",
                  },
                  "text": "hallelujah",
                  "time": "07:26",
                  "timetoken": "16287765658563945",
                  "type": "text",
                },
                "messageType": 4,
                "timetoken": "16287765658563945",
                "uuid": "pn-6f3228b8-32d3-4921-b9eb-af8e96bbde8d",
              }
            }
            toggledVal="chat"
            updateMessage={[Function]}
          >
            <WithStyles(ForwardRef(Grid))
              className="makeStyles-messageContainer-22"
              container={true}
            >
              <ForwardRef(Grid)
                className="makeStyles-messageContainer-22"
                classes={
                  Object {
                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                    "container": "MuiGrid-container",
                    "direction-xs-column": "MuiGrid-direction-xs-column",
                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                    "grid-lg-1": "MuiGrid-grid-lg-1",
                    "grid-lg-10": "MuiGrid-grid-lg-10",
                    "grid-lg-11": "MuiGrid-grid-lg-11",
                    "grid-lg-12": "MuiGrid-grid-lg-12",
                    "grid-lg-2": "MuiGrid-grid-lg-2",
                    "grid-lg-3": "MuiGrid-grid-lg-3",
                    "grid-lg-4": "MuiGrid-grid-lg-4",
                    "grid-lg-5": "MuiGrid-grid-lg-5",
                    "grid-lg-6": "MuiGrid-grid-lg-6",
                    "grid-lg-7": "MuiGrid-grid-lg-7",
                    "grid-lg-8": "MuiGrid-grid-lg-8",
                    "grid-lg-9": "MuiGrid-grid-lg-9",
                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                    "grid-lg-true": "MuiGrid-grid-lg-true",
                    "grid-md-1": "MuiGrid-grid-md-1",
                    "grid-md-10": "MuiGrid-grid-md-10",
                    "grid-md-11": "MuiGrid-grid-md-11",
                    "grid-md-12": "MuiGrid-grid-md-12",
                    "grid-md-2": "MuiGrid-grid-md-2",
                    "grid-md-3": "MuiGrid-grid-md-3",
                    "grid-md-4": "MuiGrid-grid-md-4",
                    "grid-md-5": "MuiGrid-grid-md-5",
                    "grid-md-6": "MuiGrid-grid-md-6",
                    "grid-md-7": "MuiGrid-grid-md-7",
                    "grid-md-8": "MuiGrid-grid-md-8",
                    "grid-md-9": "MuiGrid-grid-md-9",
                    "grid-md-auto": "MuiGrid-grid-md-auto",
                    "grid-md-true": "MuiGrid-grid-md-true",
                    "grid-sm-1": "MuiGrid-grid-sm-1",
                    "grid-sm-10": "MuiGrid-grid-sm-10",
                    "grid-sm-11": "MuiGrid-grid-sm-11",
                    "grid-sm-12": "MuiGrid-grid-sm-12",
                    "grid-sm-2": "MuiGrid-grid-sm-2",
                    "grid-sm-3": "MuiGrid-grid-sm-3",
                    "grid-sm-4": "MuiGrid-grid-sm-4",
                    "grid-sm-5": "MuiGrid-grid-sm-5",
                    "grid-sm-6": "MuiGrid-grid-sm-6",
                    "grid-sm-7": "MuiGrid-grid-sm-7",
                    "grid-sm-8": "MuiGrid-grid-sm-8",
                    "grid-sm-9": "MuiGrid-grid-sm-9",
                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                    "grid-sm-true": "MuiGrid-grid-sm-true",
                    "grid-xl-1": "MuiGrid-grid-xl-1",
                    "grid-xl-10": "MuiGrid-grid-xl-10",
                    "grid-xl-11": "MuiGrid-grid-xl-11",
                    "grid-xl-12": "MuiGrid-grid-xl-12",
                    "grid-xl-2": "MuiGrid-grid-xl-2",
                    "grid-xl-3": "MuiGrid-grid-xl-3",
                    "grid-xl-4": "MuiGrid-grid-xl-4",
                    "grid-xl-5": "MuiGrid-grid-xl-5",
                    "grid-xl-6": "MuiGrid-grid-xl-6",
                    "grid-xl-7": "MuiGrid-grid-xl-7",
                    "grid-xl-8": "MuiGrid-grid-xl-8",
                    "grid-xl-9": "MuiGrid-grid-xl-9",
                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                    "grid-xl-true": "MuiGrid-grid-xl-true",
                    "grid-xs-1": "MuiGrid-grid-xs-1",
                    "grid-xs-10": "MuiGrid-grid-xs-10",
                    "grid-xs-11": "MuiGrid-grid-xs-11",
                    "grid-xs-12": "MuiGrid-grid-xs-12",
                    "grid-xs-2": "MuiGrid-grid-xs-2",
                    "grid-xs-3": "MuiGrid-grid-xs-3",
                    "grid-xs-4": "MuiGrid-grid-xs-4",
                    "grid-xs-5": "MuiGrid-grid-xs-5",
                    "grid-xs-6": "MuiGrid-grid-xs-6",
                    "grid-xs-7": "MuiGrid-grid-xs-7",
                    "grid-xs-8": "MuiGrid-grid-xs-8",
                    "grid-xs-9": "MuiGrid-grid-xs-9",
                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                    "grid-xs-true": "MuiGrid-grid-xs-true",
                    "item": "MuiGrid-item",
                    "justify-xs-center": "MuiGrid-justify-xs-center",
                    "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                    "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                    "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                    "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                    "root": "MuiGrid-root",
                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                  }
                }
                container={true}
              >
                <div
                  className="MuiGrid-root makeStyles-messageContainer-22 MuiGrid-container"
                >
                  <span
                    className="makeStyles-chat-4"
                    style={
                      Object {
                        "backgroundColor": "#EEF3FF",
                      }
                    }
                  />
                  <Styled(MuiBox)
                    ml={2}
                  >
                    <div
                      className="MuiBox-root MuiBox-root-41"
                    >
                      <WithStyles(WithStyles(ForwardRef(Tooltip)))
                        title="Edit"
                      >
                        <WithStyles(ForwardRef(Tooltip))
                          classes={
                            Object {
                              "tooltip": "WithStyles(ForwardRef(Tooltip))-tooltip-37",
                            }
                          }
                          title="Edit"
                        >
                          <ForwardRef(Tooltip)
                            classes={
                              Object {
                                "arrow": "MuiTooltip-arrow",
                                "popper": "MuiTooltip-popper",
                                "popperArrow": "MuiTooltip-popperArrow",
                                "popperInteractive": "MuiTooltip-popperInteractive",
                                "tooltip": "MuiTooltip-tooltip WithStyles(ForwardRef(Tooltip))-tooltip-37",
                                "tooltipArrow": "MuiTooltip-tooltipArrow",
                                "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                "touch": "MuiTooltip-touch",
                              }
                            }
                            title="Edit"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              aria-describedby={null}
                              className=""
                              edge="start"
                              id="updateIcon"
                              label="edit"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onMouseLeave={[Function]}
                              onMouseOver={[Function]}
                              onTouchEnd={[Function]}
                              onTouchStart={[Function]}
                              title="Edit"
                            >
                              <ForwardRef(IconButton)
                                aria-describedby={null}
                                className=""
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                edge="start"
                                id="updateIcon"
                                label="edit"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseLeave={[Function]}
                                onMouseOver={[Function]}
                                onTouchEnd={[Function]}
                                onTouchStart={[Function]}
                                title="Edit"
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  aria-describedby={null}
                                  centerRipple={true}
                                  className="MuiIconButton-root MuiIconButton-edgeStart"
                                  disabled={false}
                                  focusRipple={true}
                                  id="updateIcon"
                                  label="edit"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseOver={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title="Edit"
                                >
                                  <ForwardRef(ButtonBase)
                                    aria-describedby={null}
                                    centerRipple={true}
                                    className="MuiIconButton-root MuiIconButton-edgeStart"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    id="updateIcon"
                                    label="edit"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseOver={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchStart={[Function]}
                                    title="Edit"
                                  >
                                    <button
                                      aria-describedby={null}
                                      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-edgeStart"
                                      disabled={false}
                                      id="updateIcon"
                                      label="edit"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseOver={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={0}
                                      title="Edit"
                                      type="button"
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <img
                                          alt="edit"
                                          src="/images/edit-message.svg"
                                        />
                                      </span>
                                      <WithStyles(memo)
                                        center={true}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={true}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                            <ForwardRef(Popper)
                              anchorEl={
                                <button
                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-edgeStart"
                                  id="updateIcon"
                                  label="edit"
                                  tabindex="0"
                                  title="Edit"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <img
                                      alt="edit"
                                      src="/images/edit-message.svg"
                                    />
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                              }
                              className="MuiTooltip-popper"
                              id={null}
                              open={false}
                              placement="bottom"
                              popperOptions={
                                Object {
                                  "modifiers": Object {
                                    "arrow": Object {
                                      "element": null,
                                      "enabled": false,
                                    },
                                  },
                                }
                              }
                              transition={true}
                            />
                          </ForwardRef(Tooltip)>
                        </WithStyles(ForwardRef(Tooltip))>
                      </WithStyles(WithStyles(ForwardRef(Tooltip)))>
                      <WithStyles(WithStyles(ForwardRef(Tooltip)))
                        title="Delete"
                      >
                        <WithStyles(ForwardRef(Tooltip))
                          classes={
                            Object {
                              "tooltip": "WithStyles(ForwardRef(Tooltip))-tooltip-37",
                            }
                          }
                          title="Delete"
                        >
                          <ForwardRef(Tooltip)
                            classes={
                              Object {
                                "arrow": "MuiTooltip-arrow",
                                "popper": "MuiTooltip-popper",
                                "popperArrow": "MuiTooltip-popperArrow",
                                "popperInteractive": "MuiTooltip-popperInteractive",
                                "tooltip": "MuiTooltip-tooltip WithStyles(ForwardRef(Tooltip))-tooltip-37",
                                "tooltipArrow": "MuiTooltip-tooltipArrow",
                                "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                "touch": "MuiTooltip-touch",
                              }
                            }
                            title="Delete"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              aria-describedby={null}
                              className=""
                              edge="start"
                              id="deleteIcon"
                              label="delete"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onMouseLeave={[Function]}
                              onMouseOver={[Function]}
                              onTouchEnd={[Function]}
                              onTouchStart={[Function]}
                              title="Delete"
                            >
                              <ForwardRef(IconButton)
                                aria-describedby={null}
                                className=""
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                edge="start"
                                id="deleteIcon"
                                label="delete"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseLeave={[Function]}
                                onMouseOver={[Function]}
                                onTouchEnd={[Function]}
                                onTouchStart={[Function]}
                                title="Delete"
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  aria-describedby={null}
                                  centerRipple={true}
                                  className="MuiIconButton-root MuiIconButton-edgeStart"
                                  disabled={false}
                                  focusRipple={true}
                                  id="deleteIcon"
                                  label="delete"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseOver={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title="Delete"
                                >
                                  <ForwardRef(ButtonBase)
                                    aria-describedby={null}
                                    centerRipple={true}
                                    className="MuiIconButton-root MuiIconButton-edgeStart"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    id="deleteIcon"
                                    label="delete"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseOver={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchStart={[Function]}
                                    title="Delete"
                                  >
                                    <button
                                      aria-describedby={null}
                                      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-edgeStart"
                                      disabled={false}
                                      id="deleteIcon"
                                      label="delete"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseOver={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={0}
                                      title="Delete"
                                      type="button"
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <img
                                          alt="delete"
                                          src="/images/delete-message.svg"
                                        />
                                      </span>
                                      <WithStyles(memo)
                                        center={true}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={true}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                            <ForwardRef(Popper)
                              anchorEl={
                                <button
                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-edgeStart"
                                  id="deleteIcon"
                                  label="delete"
                                  tabindex="0"
                                  title="Delete"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <img
                                      alt="delete"
                                      src="/images/delete-message.svg"
                                    />
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                              }
                              className="MuiTooltip-popper"
                              id={null}
                              open={false}
                              placement="bottom"
                              popperOptions={
                                Object {
                                  "modifiers": Object {
                                    "arrow": Object {
                                      "element": null,
                                      "enabled": false,
                                    },
                                  },
                                }
                              }
                              transition={true}
                            />
                          </ForwardRef(Tooltip)>
                        </WithStyles(ForwardRef(Tooltip))>
                      </WithStyles(WithStyles(ForwardRef(Tooltip)))>
                    </div>
                  </Styled(MuiBox)>
                </div>
              </ForwardRef(Grid)>
            </WithStyles(ForwardRef(Grid))>
          </MessageContent>
          <WithStyles(ForwardRef(Typography))
            className="makeStyles-timeField-8"
          >
            <ForwardRef(Typography)
              className="makeStyles-timeField-8"
              classes={
                Object {
                  "alignCenter": "MuiTypography-alignCenter",
                  "alignJustify": "MuiTypography-alignJustify",
                  "alignLeft": "MuiTypography-alignLeft",
                  "alignRight": "MuiTypography-alignRight",
                  "body1": "MuiTypography-body1",
                  "body2": "MuiTypography-body2",
                  "button": "MuiTypography-button",
                  "caption": "MuiTypography-caption",
                  "colorError": "MuiTypography-colorError",
                  "colorInherit": "MuiTypography-colorInherit",
                  "colorPrimary": "MuiTypography-colorPrimary",
                  "colorSecondary": "MuiTypography-colorSecondary",
                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                  "displayBlock": "MuiTypography-displayBlock",
                  "displayInline": "MuiTypography-displayInline",
                  "gutterBottom": "MuiTypography-gutterBottom",
                  "h1": "MuiTypography-h1",
                  "h2": "MuiTypography-h2",
                  "h3": "MuiTypography-h3",
                  "h4": "MuiTypography-h4",
                  "h5": "MuiTypography-h5",
                  "h6": "MuiTypography-h6",
                  "noWrap": "MuiTypography-noWrap",
                  "overline": "MuiTypography-overline",
                  "paragraph": "MuiTypography-paragraph",
                  "root": "MuiTypography-root",
                  "srOnly": "MuiTypography-srOnly",
                  "subtitle1": "MuiTypography-subtitle1",
                  "subtitle2": "MuiTypography-subtitle2",
                }
              }
            >
              <p
                className="MuiTypography-root makeStyles-timeField-8 MuiTypography-body1"
              />
            </ForwardRef(Typography)>
          </WithStyles(ForwardRef(Typography))>
        </div>
        <div
          key="3"
        >
          <WithStyles(ForwardRef(Grid))
            container={true}
          >
            <ForwardRef(Grid)
              classes={
                Object {
                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                  "container": "MuiGrid-container",
                  "direction-xs-column": "MuiGrid-direction-xs-column",
                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                  "grid-lg-1": "MuiGrid-grid-lg-1",
                  "grid-lg-10": "MuiGrid-grid-lg-10",
                  "grid-lg-11": "MuiGrid-grid-lg-11",
                  "grid-lg-12": "MuiGrid-grid-lg-12",
                  "grid-lg-2": "MuiGrid-grid-lg-2",
                  "grid-lg-3": "MuiGrid-grid-lg-3",
                  "grid-lg-4": "MuiGrid-grid-lg-4",
                  "grid-lg-5": "MuiGrid-grid-lg-5",
                  "grid-lg-6": "MuiGrid-grid-lg-6",
                  "grid-lg-7": "MuiGrid-grid-lg-7",
                  "grid-lg-8": "MuiGrid-grid-lg-8",
                  "grid-lg-9": "MuiGrid-grid-lg-9",
                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                  "grid-lg-true": "MuiGrid-grid-lg-true",
                  "grid-md-1": "MuiGrid-grid-md-1",
                  "grid-md-10": "MuiGrid-grid-md-10",
                  "grid-md-11": "MuiGrid-grid-md-11",
                  "grid-md-12": "MuiGrid-grid-md-12",
                  "grid-md-2": "MuiGrid-grid-md-2",
                  "grid-md-3": "MuiGrid-grid-md-3",
                  "grid-md-4": "MuiGrid-grid-md-4",
                  "grid-md-5": "MuiGrid-grid-md-5",
                  "grid-md-6": "MuiGrid-grid-md-6",
                  "grid-md-7": "MuiGrid-grid-md-7",
                  "grid-md-8": "MuiGrid-grid-md-8",
                  "grid-md-9": "MuiGrid-grid-md-9",
                  "grid-md-auto": "MuiGrid-grid-md-auto",
                  "grid-md-true": "MuiGrid-grid-md-true",
                  "grid-sm-1": "MuiGrid-grid-sm-1",
                  "grid-sm-10": "MuiGrid-grid-sm-10",
                  "grid-sm-11": "MuiGrid-grid-sm-11",
                  "grid-sm-12": "MuiGrid-grid-sm-12",
                  "grid-sm-2": "MuiGrid-grid-sm-2",
                  "grid-sm-3": "MuiGrid-grid-sm-3",
                  "grid-sm-4": "MuiGrid-grid-sm-4",
                  "grid-sm-5": "MuiGrid-grid-sm-5",
                  "grid-sm-6": "MuiGrid-grid-sm-6",
                  "grid-sm-7": "MuiGrid-grid-sm-7",
                  "grid-sm-8": "MuiGrid-grid-sm-8",
                  "grid-sm-9": "MuiGrid-grid-sm-9",
                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                  "grid-sm-true": "MuiGrid-grid-sm-true",
                  "grid-xl-1": "MuiGrid-grid-xl-1",
                  "grid-xl-10": "MuiGrid-grid-xl-10",
                  "grid-xl-11": "MuiGrid-grid-xl-11",
                  "grid-xl-12": "MuiGrid-grid-xl-12",
                  "grid-xl-2": "MuiGrid-grid-xl-2",
                  "grid-xl-3": "MuiGrid-grid-xl-3",
                  "grid-xl-4": "MuiGrid-grid-xl-4",
                  "grid-xl-5": "MuiGrid-grid-xl-5",
                  "grid-xl-6": "MuiGrid-grid-xl-6",
                  "grid-xl-7": "MuiGrid-grid-xl-7",
                  "grid-xl-8": "MuiGrid-grid-xl-8",
                  "grid-xl-9": "MuiGrid-grid-xl-9",
                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                  "grid-xl-true": "MuiGrid-grid-xl-true",
                  "grid-xs-1": "MuiGrid-grid-xs-1",
                  "grid-xs-10": "MuiGrid-grid-xs-10",
                  "grid-xs-11": "MuiGrid-grid-xs-11",
                  "grid-xs-12": "MuiGrid-grid-xs-12",
                  "grid-xs-2": "MuiGrid-grid-xs-2",
                  "grid-xs-3": "MuiGrid-grid-xs-3",
                  "grid-xs-4": "MuiGrid-grid-xs-4",
                  "grid-xs-5": "MuiGrid-grid-xs-5",
                  "grid-xs-6": "MuiGrid-grid-xs-6",
                  "grid-xs-7": "MuiGrid-grid-xs-7",
                  "grid-xs-8": "MuiGrid-grid-xs-8",
                  "grid-xs-9": "MuiGrid-grid-xs-9",
                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                  "grid-xs-true": "MuiGrid-grid-xs-true",
                  "item": "MuiGrid-item",
                  "justify-xs-center": "MuiGrid-justify-xs-center",
                  "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                  "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                  "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                  "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                  "root": "MuiGrid-root",
                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                }
              }
              container={true}
            >
              <div
                className="MuiGrid-root MuiGrid-container"
              >
                <Styled(MuiBox)>
                  <div
                    className="MuiBox-root MuiBox-root-42"
                  >
                    <WithStyles(ForwardRef(Avatar))
                      src="/images/default-user.svg"
                      variant="square"
                    >
                      <ForwardRef(Avatar)
                        classes={
                          Object {
                            "circle": "MuiAvatar-circle",
                            "circular": "MuiAvatar-circular",
                            "colorDefault": "MuiAvatar-colorDefault",
                            "fallback": "MuiAvatar-fallback",
                            "img": "MuiAvatar-img",
                            "root": "MuiAvatar-root",
                            "rounded": "MuiAvatar-rounded",
                            "square": "MuiAvatar-square",
                          }
                        }
                        src="/images/default-user.svg"
                        variant="square"
                      >
                        <div
                          className="MuiAvatar-root MuiAvatar-square"
                        >
                          <img
                            className="MuiAvatar-img"
                            src="/images/default-user.svg"
                          />
                        </div>
                      </ForwardRef(Avatar)>
                    </WithStyles(ForwardRef(Avatar))>
                  </div>
                </Styled(MuiBox)>
                <WithStyles(ForwardRef(Typography))
                  className="makeStyles-user-10"
                >
                  <ForwardRef(Typography)
                    className="makeStyles-user-10"
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                  >
                    <p
                      className="MuiTypography-root makeStyles-user-10 MuiTypography-body1"
                    >
                      Unknown
                    </p>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
              </div>
            </ForwardRef(Grid)>
          </WithStyles(ForwardRef(Grid))>
          <MessageContent
            confirmDelete={[Function]}
            confirmUndo={[Function]}
            id="messageContent"
            index={3}
            message={
              Object {
                "channel": "pro.one",
                "message": Object {
                  "file": Object {
                    "id": "6205f5c3-3da9-41ba-bb9c-e5e49e61aedd",
                    "name": "self1.jpeg",
                    "url": "https://ps.pndsn.com/v1/files/sub-c-1335d6e8-a993-11eb-9cd5-b6e2b128ec2a/channels/pro.one/files/6205f5c3-3da9-41ba-bb9c-e5e49e61aedd/self1.jpeg",
                  },
                  "image": "https://ps.pndsn.com/v1/files/sub-c-1335d6e8-a993-11eb-9cd5-b6e2b128ec2a/channels/pro.one/files/6205f5c3-3da9-41ba-bb9c-e5e49e61aedd/self1.jpeg",
                  "message": Object {
                    "text": "hallelujah",
                  },
                  "text": "hallelujah",
                  "time": "07:26",
                  "timetoken": "16287766010372679",
                  "type": "text",
                },
                "messageType": 4,
                "timetoken": "16287766010372679",
                "uuid": "pn-6f3228b8-32d3-4921-b9eb-af8e96bbde8d",
              }
            }
            toggledVal="chat"
            updateMessage={[Function]}
          >
            <WithStyles(ForwardRef(Grid))
              className="makeStyles-messageContainer-22"
              container={true}
            >
              <ForwardRef(Grid)
                className="makeStyles-messageContainer-22"
                classes={
                  Object {
                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                    "container": "MuiGrid-container",
                    "direction-xs-column": "MuiGrid-direction-xs-column",
                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                    "grid-lg-1": "MuiGrid-grid-lg-1",
                    "grid-lg-10": "MuiGrid-grid-lg-10",
                    "grid-lg-11": "MuiGrid-grid-lg-11",
                    "grid-lg-12": "MuiGrid-grid-lg-12",
                    "grid-lg-2": "MuiGrid-grid-lg-2",
                    "grid-lg-3": "MuiGrid-grid-lg-3",
                    "grid-lg-4": "MuiGrid-grid-lg-4",
                    "grid-lg-5": "MuiGrid-grid-lg-5",
                    "grid-lg-6": "MuiGrid-grid-lg-6",
                    "grid-lg-7": "MuiGrid-grid-lg-7",
                    "grid-lg-8": "MuiGrid-grid-lg-8",
                    "grid-lg-9": "MuiGrid-grid-lg-9",
                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                    "grid-lg-true": "MuiGrid-grid-lg-true",
                    "grid-md-1": "MuiGrid-grid-md-1",
                    "grid-md-10": "MuiGrid-grid-md-10",
                    "grid-md-11": "MuiGrid-grid-md-11",
                    "grid-md-12": "MuiGrid-grid-md-12",
                    "grid-md-2": "MuiGrid-grid-md-2",
                    "grid-md-3": "MuiGrid-grid-md-3",
                    "grid-md-4": "MuiGrid-grid-md-4",
                    "grid-md-5": "MuiGrid-grid-md-5",
                    "grid-md-6": "MuiGrid-grid-md-6",
                    "grid-md-7": "MuiGrid-grid-md-7",
                    "grid-md-8": "MuiGrid-grid-md-8",
                    "grid-md-9": "MuiGrid-grid-md-9",
                    "grid-md-auto": "MuiGrid-grid-md-auto",
                    "grid-md-true": "MuiGrid-grid-md-true",
                    "grid-sm-1": "MuiGrid-grid-sm-1",
                    "grid-sm-10": "MuiGrid-grid-sm-10",
                    "grid-sm-11": "MuiGrid-grid-sm-11",
                    "grid-sm-12": "MuiGrid-grid-sm-12",
                    "grid-sm-2": "MuiGrid-grid-sm-2",
                    "grid-sm-3": "MuiGrid-grid-sm-3",
                    "grid-sm-4": "MuiGrid-grid-sm-4",
                    "grid-sm-5": "MuiGrid-grid-sm-5",
                    "grid-sm-6": "MuiGrid-grid-sm-6",
                    "grid-sm-7": "MuiGrid-grid-sm-7",
                    "grid-sm-8": "MuiGrid-grid-sm-8",
                    "grid-sm-9": "MuiGrid-grid-sm-9",
                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                    "grid-sm-true": "MuiGrid-grid-sm-true",
                    "grid-xl-1": "MuiGrid-grid-xl-1",
                    "grid-xl-10": "MuiGrid-grid-xl-10",
                    "grid-xl-11": "MuiGrid-grid-xl-11",
                    "grid-xl-12": "MuiGrid-grid-xl-12",
                    "grid-xl-2": "MuiGrid-grid-xl-2",
                    "grid-xl-3": "MuiGrid-grid-xl-3",
                    "grid-xl-4": "MuiGrid-grid-xl-4",
                    "grid-xl-5": "MuiGrid-grid-xl-5",
                    "grid-xl-6": "MuiGrid-grid-xl-6",
                    "grid-xl-7": "MuiGrid-grid-xl-7",
                    "grid-xl-8": "MuiGrid-grid-xl-8",
                    "grid-xl-9": "MuiGrid-grid-xl-9",
                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                    "grid-xl-true": "MuiGrid-grid-xl-true",
                    "grid-xs-1": "MuiGrid-grid-xs-1",
                    "grid-xs-10": "MuiGrid-grid-xs-10",
                    "grid-xs-11": "MuiGrid-grid-xs-11",
                    "grid-xs-12": "MuiGrid-grid-xs-12",
                    "grid-xs-2": "MuiGrid-grid-xs-2",
                    "grid-xs-3": "MuiGrid-grid-xs-3",
                    "grid-xs-4": "MuiGrid-grid-xs-4",
                    "grid-xs-5": "MuiGrid-grid-xs-5",
                    "grid-xs-6": "MuiGrid-grid-xs-6",
                    "grid-xs-7": "MuiGrid-grid-xs-7",
                    "grid-xs-8": "MuiGrid-grid-xs-8",
                    "grid-xs-9": "MuiGrid-grid-xs-9",
                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                    "grid-xs-true": "MuiGrid-grid-xs-true",
                    "item": "MuiGrid-item",
                    "justify-xs-center": "MuiGrid-justify-xs-center",
                    "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                    "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                    "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                    "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                    "root": "MuiGrid-root",
                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                  }
                }
                container={true}
              >
                <div
                  className="MuiGrid-root makeStyles-messageContainer-22 MuiGrid-container"
                >
                  <span
                    className="makeStyles-chat-4"
                    style={
                      Object {
                        "backgroundColor": "#FFFFFF",
                      }
                    }
                  />
                  <Styled(MuiBox)
                    ml={2}
                  >
                    <div
                      className="MuiBox-root MuiBox-root-43"
                    >
                      <WithStyles(WithStyles(ForwardRef(Tooltip)))
                        title="Edit"
                      >
                        <WithStyles(ForwardRef(Tooltip))
                          classes={
                            Object {
                              "tooltip": "WithStyles(ForwardRef(Tooltip))-tooltip-37",
                            }
                          }
                          title="Edit"
                        >
                          <ForwardRef(Tooltip)
                            classes={
                              Object {
                                "arrow": "MuiTooltip-arrow",
                                "popper": "MuiTooltip-popper",
                                "popperArrow": "MuiTooltip-popperArrow",
                                "popperInteractive": "MuiTooltip-popperInteractive",
                                "tooltip": "MuiTooltip-tooltip WithStyles(ForwardRef(Tooltip))-tooltip-37",
                                "tooltipArrow": "MuiTooltip-tooltipArrow",
                                "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                "touch": "MuiTooltip-touch",
                              }
                            }
                            title="Edit"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              aria-describedby={null}
                              className=""
                              edge="start"
                              id="updateIcon"
                              label="edit"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onMouseLeave={[Function]}
                              onMouseOver={[Function]}
                              onTouchEnd={[Function]}
                              onTouchStart={[Function]}
                              title="Edit"
                            >
                              <ForwardRef(IconButton)
                                aria-describedby={null}
                                className=""
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                edge="start"
                                id="updateIcon"
                                label="edit"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseLeave={[Function]}
                                onMouseOver={[Function]}
                                onTouchEnd={[Function]}
                                onTouchStart={[Function]}
                                title="Edit"
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  aria-describedby={null}
                                  centerRipple={true}
                                  className="MuiIconButton-root MuiIconButton-edgeStart"
                                  disabled={false}
                                  focusRipple={true}
                                  id="updateIcon"
                                  label="edit"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseOver={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title="Edit"
                                >
                                  <ForwardRef(ButtonBase)
                                    aria-describedby={null}
                                    centerRipple={true}
                                    className="MuiIconButton-root MuiIconButton-edgeStart"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    id="updateIcon"
                                    label="edit"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseOver={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchStart={[Function]}
                                    title="Edit"
                                  >
                                    <button
                                      aria-describedby={null}
                                      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-edgeStart"
                                      disabled={false}
                                      id="updateIcon"
                                      label="edit"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseOver={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={0}
                                      title="Edit"
                                      type="button"
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <img
                                          alt="edit"
                                          src="/images/edit-message.svg"
                                        />
                                      </span>
                                      <WithStyles(memo)
                                        center={true}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={true}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                            <ForwardRef(Popper)
                              anchorEl={
                                <button
                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-edgeStart"
                                  id="updateIcon"
                                  label="edit"
                                  tabindex="0"
                                  title="Edit"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <img
                                      alt="edit"
                                      src="/images/edit-message.svg"
                                    />
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                              }
                              className="MuiTooltip-popper"
                              id={null}
                              open={false}
                              placement="bottom"
                              popperOptions={
                                Object {
                                  "modifiers": Object {
                                    "arrow": Object {
                                      "element": null,
                                      "enabled": false,
                                    },
                                  },
                                }
                              }
                              transition={true}
                            />
                          </ForwardRef(Tooltip)>
                        </WithStyles(ForwardRef(Tooltip))>
                      </WithStyles(WithStyles(ForwardRef(Tooltip)))>
                      <WithStyles(WithStyles(ForwardRef(Tooltip)))
                        title="Delete"
                      >
                        <WithStyles(ForwardRef(Tooltip))
                          classes={
                            Object {
                              "tooltip": "WithStyles(ForwardRef(Tooltip))-tooltip-37",
                            }
                          }
                          title="Delete"
                        >
                          <ForwardRef(Tooltip)
                            classes={
                              Object {
                                "arrow": "MuiTooltip-arrow",
                                "popper": "MuiTooltip-popper",
                                "popperArrow": "MuiTooltip-popperArrow",
                                "popperInteractive": "MuiTooltip-popperInteractive",
                                "tooltip": "MuiTooltip-tooltip WithStyles(ForwardRef(Tooltip))-tooltip-37",
                                "tooltipArrow": "MuiTooltip-tooltipArrow",
                                "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                "touch": "MuiTooltip-touch",
                              }
                            }
                            title="Delete"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              aria-describedby={null}
                              className=""
                              edge="start"
                              id="deleteIcon"
                              label="delete"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onMouseLeave={[Function]}
                              onMouseOver={[Function]}
                              onTouchEnd={[Function]}
                              onTouchStart={[Function]}
                              title="Delete"
                            >
                              <ForwardRef(IconButton)
                                aria-describedby={null}
                                className=""
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                edge="start"
                                id="deleteIcon"
                                label="delete"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseLeave={[Function]}
                                onMouseOver={[Function]}
                                onTouchEnd={[Function]}
                                onTouchStart={[Function]}
                                title="Delete"
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  aria-describedby={null}
                                  centerRipple={true}
                                  className="MuiIconButton-root MuiIconButton-edgeStart"
                                  disabled={false}
                                  focusRipple={true}
                                  id="deleteIcon"
                                  label="delete"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseOver={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                  title="Delete"
                                >
                                  <ForwardRef(ButtonBase)
                                    aria-describedby={null}
                                    centerRipple={true}
                                    className="MuiIconButton-root MuiIconButton-edgeStart"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    id="deleteIcon"
                                    label="delete"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseOver={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchStart={[Function]}
                                    title="Delete"
                                  >
                                    <button
                                      aria-describedby={null}
                                      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-edgeStart"
                                      disabled={false}
                                      id="deleteIcon"
                                      label="delete"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseOver={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={0}
                                      title="Delete"
                                      type="button"
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <img
                                          alt="delete"
                                          src="/images/delete-message.svg"
                                        />
                                      </span>
                                      <WithStyles(memo)
                                        center={true}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={true}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                            <ForwardRef(Popper)
                              anchorEl={
                                <button
                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-edgeStart"
                                  id="deleteIcon"
                                  label="delete"
                                  tabindex="0"
                                  title="Delete"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <img
                                      alt="delete"
                                      src="/images/delete-message.svg"
                                    />
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                              }
                              className="MuiTooltip-popper"
                              id={null}
                              open={false}
                              placement="bottom"
                              popperOptions={
                                Object {
                                  "modifiers": Object {
                                    "arrow": Object {
                                      "element": null,
                                      "enabled": false,
                                    },
                                  },
                                }
                              }
                              transition={true}
                            />
                          </ForwardRef(Tooltip)>
                        </WithStyles(ForwardRef(Tooltip))>
                      </WithStyles(WithStyles(ForwardRef(Tooltip)))>
                    </div>
                  </Styled(MuiBox)>
                </div>
              </ForwardRef(Grid)>
            </WithStyles(ForwardRef(Grid))>
          </MessageContent>
          <WithStyles(ForwardRef(Typography))
            className="makeStyles-timeField-8"
          >
            <ForwardRef(Typography)
              className="makeStyles-timeField-8"
              classes={
                Object {
                  "alignCenter": "MuiTypography-alignCenter",
                  "alignJustify": "MuiTypography-alignJustify",
                  "alignLeft": "MuiTypography-alignLeft",
                  "alignRight": "MuiTypography-alignRight",
                  "body1": "MuiTypography-body1",
                  "body2": "MuiTypography-body2",
                  "button": "MuiTypography-button",
                  "caption": "MuiTypography-caption",
                  "colorError": "MuiTypography-colorError",
                  "colorInherit": "MuiTypography-colorInherit",
                  "colorPrimary": "MuiTypography-colorPrimary",
                  "colorSecondary": "MuiTypography-colorSecondary",
                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                  "displayBlock": "MuiTypography-displayBlock",
                  "displayInline": "MuiTypography-displayInline",
                  "gutterBottom": "MuiTypography-gutterBottom",
                  "h1": "MuiTypography-h1",
                  "h2": "MuiTypography-h2",
                  "h3": "MuiTypography-h3",
                  "h4": "MuiTypography-h4",
                  "h5": "MuiTypography-h5",
                  "h6": "MuiTypography-h6",
                  "noWrap": "MuiTypography-noWrap",
                  "overline": "MuiTypography-overline",
                  "paragraph": "MuiTypography-paragraph",
                  "root": "MuiTypography-root",
                  "srOnly": "MuiTypography-srOnly",
                  "subtitle1": "MuiTypography-subtitle1",
                  "subtitle2": "MuiTypography-subtitle2",
                }
              }
            >
              <p
                className="MuiTypography-root makeStyles-timeField-8 MuiTypography-body1"
              />
            </ForwardRef(Typography)>
          </WithStyles(ForwardRef(Typography))>
        </div>
        <div />
      </div>
    </ForwardRef(Grid)>
  </WithStyles(ForwardRef(Grid))>
  <ConfirmDialog
    actionMessage="Yes, Delete it"
    id="delete"
    onConfirm={[Function]}
    open={false}
    setOpen={[Function]}
    title="Are you sure?"
  >
    <WithStyles(ForwardRef(Dialog))
      aria-labelledby="confirm-dialog"
      className="makeStyles-confirmDialog-33"
      fullWidth={true}
      id="dialog"
      maxWidth="xs"
      onClose={[Function]}
      open={false}
    >
      <ForwardRef(Dialog)
        aria-labelledby="confirm-dialog"
        className="makeStyles-confirmDialog-33"
        classes={
          Object {
            "container": "MuiDialog-container",
            "paper": "MuiDialog-paper",
            "paperFullScreen": "MuiDialog-paperFullScreen",
            "paperFullWidth": "MuiDialog-paperFullWidth",
            "paperScrollBody": "MuiDialog-paperScrollBody",
            "paperScrollPaper": "MuiDialog-paperScrollPaper",
            "paperWidthFalse": "MuiDialog-paperWidthFalse",
            "paperWidthLg": "MuiDialog-paperWidthLg",
            "paperWidthMd": "MuiDialog-paperWidthMd",
            "paperWidthSm": "MuiDialog-paperWidthSm",
            "paperWidthXl": "MuiDialog-paperWidthXl",
            "paperWidthXs": "MuiDialog-paperWidthXs",
            "root": "MuiDialog-root",
            "scrollBody": "MuiDialog-scrollBody",
            "scrollPaper": "MuiDialog-scrollPaper",
          }
        }
        fullWidth={true}
        id="dialog"
        maxWidth="xs"
        onClose={[Function]}
        open={false}
      >
        <ForwardRef(Modal)
          BackdropComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "Naked": Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "children": [Function],
                  "className": [Function],
                  "classes": [Function],
                  "invisible": [Function],
                  "open": [Function],
                  "transitionDuration": [Function],
                },
                "render": [Function],
              },
              "options": Object {
                "defaultTheme": Object {
                  "breakpoints": Object {
                    "between": [Function],
                    "down": [Function],
                    "keys": Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ],
                    "only": [Function],
                    "up": [Function],
                    "values": Object {
                      "lg": 1280,
                      "md": 960,
                      "sm": 600,
                      "xl": 1920,
                      "xs": 0,
                    },
                    "width": [Function],
                  },
                  "direction": "ltr",
                  "mixins": Object {
                    "gutters": [Function],
                    "toolbar": Object {
                      "@media (min-width:0px) and (orientation: landscape)": Object {
                        "minHeight": 48,
                      },
                      "@media (min-width:600px)": Object {
                        "minHeight": 64,
                      },
                      "minHeight": 56,
                    },
                  },
                  "overrides": Object {},
                  "palette": Object {
                    "action": Object {
                      "activatedOpacity": 0.12,
                      "active": "rgba(0, 0, 0, 0.54)",
                      "disabled": "rgba(0, 0, 0, 0.26)",
                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                      "disabledOpacity": 0.38,
                      "focus": "rgba(0, 0, 0, 0.12)",
                      "focusOpacity": 0.12,
                      "hover": "rgba(0, 0, 0, 0.04)",
                      "hoverOpacity": 0.04,
                      "selected": "rgba(0, 0, 0, 0.08)",
                      "selectedOpacity": 0.08,
                    },
                    "augmentColor": [Function],
                    "background": Object {
                      "default": "#fafafa",
                      "paper": "#fff",
                    },
                    "common": Object {
                      "black": "#000",
                      "white": "#fff",
                    },
                    "contrastThreshold": 3,
                    "divider": "rgba(0, 0, 0, 0.12)",
                    "error": Object {
                      "contrastText": "#fff",
                      "dark": "#d32f2f",
                      "light": "#e57373",
                      "main": "#f44336",
                    },
                    "getContrastText": [Function],
                    "grey": Object {
                      "100": "#f5f5f5",
                      "200": "#eeeeee",
                      "300": "#e0e0e0",
                      "400": "#bdbdbd",
                      "50": "#fafafa",
                      "500": "#9e9e9e",
                      "600": "#757575",
                      "700": "#616161",
                      "800": "#424242",
                      "900": "#212121",
                      "A100": "#d5d5d5",
                      "A200": "#aaaaaa",
                      "A400": "#303030",
                      "A700": "#616161",
                    },
                    "info": Object {
                      "contrastText": "#fff",
                      "dark": "#1976d2",
                      "light": "#64b5f6",
                      "main": "#2196f3",
                    },
                    "primary": Object {
                      "contrastText": "#fff",
                      "dark": "#303f9f",
                      "light": "#7986cb",
                      "main": "#3f51b5",
                    },
                    "secondary": Object {
                      "contrastText": "#fff",
                      "dark": "#c51162",
                      "light": "#ff4081",
                      "main": "#f50057",
                    },
                    "success": Object {
                      "contrastText": "rgba(0, 0, 0, 0.87)",
                      "dark": "#388e3c",
                      "light": "#81c784",
                      "main": "#4caf50",
                    },
                    "text": Object {
                      "disabled": "rgba(0, 0, 0, 0.38)",
                      "hint": "rgba(0, 0, 0, 0.38)",
                      "primary": "rgba(0, 0, 0, 0.87)",
                      "secondary": "rgba(0, 0, 0, 0.54)",
                    },
                    "tonalOffset": 0.2,
                    "type": "light",
                    "warning": Object {
                      "contrastText": "rgba(0, 0, 0, 0.87)",
                      "dark": "#f57c00",
                      "light": "#ffb74d",
                      "main": "#ff9800",
                    },
                  },
                  "props": Object {},
                  "shadows": Array [
                    "none",
                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                  ],
                  "shape": Object {
                    "borderRadius": 4,
                  },
                  "spacing": [Function],
                  "transitions": Object {
                    "create": [Function],
                    "duration": Object {
                      "complex": 375,
                      "enteringScreen": 225,
                      "leavingScreen": 195,
                      "short": 250,
                      "shorter": 200,
                      "shortest": 150,
                      "standard": 300,
                    },
                    "easing": Object {
                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                    },
                    "getAutoHeightDuration": [Function],
                  },
                  "typography": Object {
                    "body1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00938em",
                      "lineHeight": 1.5,
                    },
                    "body2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.01071em",
                      "lineHeight": 1.43,
                    },
                    "button": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.02857em",
                      "lineHeight": 1.75,
                      "textTransform": "uppercase",
                    },
                    "caption": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.03333em",
                      "lineHeight": 1.66,
                    },
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": 14,
                    "fontWeightBold": 700,
                    "fontWeightLight": 300,
                    "fontWeightMedium": 500,
                    "fontWeightRegular": 400,
                    "h1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "6rem",
                      "fontWeight": 300,
                      "letterSpacing": "-0.01562em",
                      "lineHeight": 1.167,
                    },
                    "h2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3.75rem",
                      "fontWeight": 300,
                      "letterSpacing": "-0.00833em",
                      "lineHeight": 1.2,
                    },
                    "h3": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3rem",
                      "fontWeight": 400,
                      "letterSpacing": "0em",
                      "lineHeight": 1.167,
                    },
                    "h4": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "2.125rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00735em",
                      "lineHeight": 1.235,
                    },
                    "h5": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.5rem",
                      "fontWeight": 400,
                      "letterSpacing": "0em",
                      "lineHeight": 1.334,
                    },
                    "h6": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.25rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.0075em",
                      "lineHeight": 1.6,
                    },
                    "htmlFontSize": 16,
                    "overline": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.08333em",
                      "lineHeight": 2.66,
                      "textTransform": "uppercase",
                    },
                    "pxToRem": [Function],
                    "round": [Function],
                    "subtitle1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00938em",
                      "lineHeight": 1.75,
                    },
                    "subtitle2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.00714em",
                      "lineHeight": 1.57,
                    },
                  },
                  "zIndex": Object {
                    "appBar": 1100,
                    "drawer": 1200,
                    "mobileStepper": 1000,
                    "modal": 1300,
                    "snackbar": 1400,
                    "speedDial": 1050,
                    "tooltip": 1500,
                  },
                },
                "name": "MuiBackdrop",
              },
              "propTypes": Object {
                "classes": [Function],
                "innerRef": [Function],
              },
              "render": [Function],
              "useStyles": [Function],
            }
          }
          BackdropProps={
            Object {
              "transitionDuration": Object {
                "enter": 225,
                "exit": 195,
              },
            }
          }
          className="MuiDialog-root makeStyles-confirmDialog-33"
          closeAfterTransition={true}
          disableBackdropClick={false}
          disableEscapeKeyDown={false}
          id="dialog"
          onClose={[Function]}
          open={false}
        />
      </ForwardRef(Dialog)>
    </WithStyles(ForwardRef(Dialog))>
  </ConfirmDialog>
  <UndoDelete
    channel="pro.one"
    message={Array []}
    open={false}
    setOpen={[Function]}
    title="Are you sure?"
    updated={[MockFunction]}
  >
    <WithStyles(ForwardRef(Dialog))
      aria-labelledby="confirm-dialog"
      className="makeStyles-confirmDialog-33"
      fullWidth={true}
      id="dialog"
      maxWidth="xs"
      onClose={[Function]}
      open={false}
    >
      <ForwardRef(Dialog)
        aria-labelledby="confirm-dialog"
        className="makeStyles-confirmDialog-33"
        classes={
          Object {
            "container": "MuiDialog-container",
            "paper": "MuiDialog-paper",
            "paperFullScreen": "MuiDialog-paperFullScreen",
            "paperFullWidth": "MuiDialog-paperFullWidth",
            "paperScrollBody": "MuiDialog-paperScrollBody",
            "paperScrollPaper": "MuiDialog-paperScrollPaper",
            "paperWidthFalse": "MuiDialog-paperWidthFalse",
            "paperWidthLg": "MuiDialog-paperWidthLg",
            "paperWidthMd": "MuiDialog-paperWidthMd",
            "paperWidthSm": "MuiDialog-paperWidthSm",
            "paperWidthXl": "MuiDialog-paperWidthXl",
            "paperWidthXs": "MuiDialog-paperWidthXs",
            "root": "MuiDialog-root",
            "scrollBody": "MuiDialog-scrollBody",
            "scrollPaper": "MuiDialog-scrollPaper",
          }
        }
        fullWidth={true}
        id="dialog"
        maxWidth="xs"
        onClose={[Function]}
        open={false}
      >
        <ForwardRef(Modal)
          BackdropComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "Naked": Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "children": [Function],
                  "className": [Function],
                  "classes": [Function],
                  "invisible": [Function],
                  "open": [Function],
                  "transitionDuration": [Function],
                },
                "render": [Function],
              },
              "options": Object {
                "defaultTheme": Object {
                  "breakpoints": Object {
                    "between": [Function],
                    "down": [Function],
                    "keys": Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ],
                    "only": [Function],
                    "up": [Function],
                    "values": Object {
                      "lg": 1280,
                      "md": 960,
                      "sm": 600,
                      "xl": 1920,
                      "xs": 0,
                    },
                    "width": [Function],
                  },
                  "direction": "ltr",
                  "mixins": Object {
                    "gutters": [Function],
                    "toolbar": Object {
                      "@media (min-width:0px) and (orientation: landscape)": Object {
                        "minHeight": 48,
                      },
                      "@media (min-width:600px)": Object {
                        "minHeight": 64,
                      },
                      "minHeight": 56,
                    },
                  },
                  "overrides": Object {},
                  "palette": Object {
                    "action": Object {
                      "activatedOpacity": 0.12,
                      "active": "rgba(0, 0, 0, 0.54)",
                      "disabled": "rgba(0, 0, 0, 0.26)",
                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                      "disabledOpacity": 0.38,
                      "focus": "rgba(0, 0, 0, 0.12)",
                      "focusOpacity": 0.12,
                      "hover": "rgba(0, 0, 0, 0.04)",
                      "hoverOpacity": 0.04,
                      "selected": "rgba(0, 0, 0, 0.08)",
                      "selectedOpacity": 0.08,
                    },
                    "augmentColor": [Function],
                    "background": Object {
                      "default": "#fafafa",
                      "paper": "#fff",
                    },
                    "common": Object {
                      "black": "#000",
                      "white": "#fff",
                    },
                    "contrastThreshold": 3,
                    "divider": "rgba(0, 0, 0, 0.12)",
                    "error": Object {
                      "contrastText": "#fff",
                      "dark": "#d32f2f",
                      "light": "#e57373",
                      "main": "#f44336",
                    },
                    "getContrastText": [Function],
                    "grey": Object {
                      "100": "#f5f5f5",
                      "200": "#eeeeee",
                      "300": "#e0e0e0",
                      "400": "#bdbdbd",
                      "50": "#fafafa",
                      "500": "#9e9e9e",
                      "600": "#757575",
                      "700": "#616161",
                      "800": "#424242",
                      "900": "#212121",
                      "A100": "#d5d5d5",
                      "A200": "#aaaaaa",
                      "A400": "#303030",
                      "A700": "#616161",
                    },
                    "info": Object {
                      "contrastText": "#fff",
                      "dark": "#1976d2",
                      "light": "#64b5f6",
                      "main": "#2196f3",
                    },
                    "primary": Object {
                      "contrastText": "#fff",
                      "dark": "#303f9f",
                      "light": "#7986cb",
                      "main": "#3f51b5",
                    },
                    "secondary": Object {
                      "contrastText": "#fff",
                      "dark": "#c51162",
                      "light": "#ff4081",
                      "main": "#f50057",
                    },
                    "success": Object {
                      "contrastText": "rgba(0, 0, 0, 0.87)",
                      "dark": "#388e3c",
                      "light": "#81c784",
                      "main": "#4caf50",
                    },
                    "text": Object {
                      "disabled": "rgba(0, 0, 0, 0.38)",
                      "hint": "rgba(0, 0, 0, 0.38)",
                      "primary": "rgba(0, 0, 0, 0.87)",
                      "secondary": "rgba(0, 0, 0, 0.54)",
                    },
                    "tonalOffset": 0.2,
                    "type": "light",
                    "warning": Object {
                      "contrastText": "rgba(0, 0, 0, 0.87)",
                      "dark": "#f57c00",
                      "light": "#ffb74d",
                      "main": "#ff9800",
                    },
                  },
                  "props": Object {},
                  "shadows": Array [
                    "none",
                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                  ],
                  "shape": Object {
                    "borderRadius": 4,
                  },
                  "spacing": [Function],
                  "transitions": Object {
                    "create": [Function],
                    "duration": Object {
                      "complex": 375,
                      "enteringScreen": 225,
                      "leavingScreen": 195,
                      "short": 250,
                      "shorter": 200,
                      "shortest": 150,
                      "standard": 300,
                    },
                    "easing": Object {
                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                    },
                    "getAutoHeightDuration": [Function],
                  },
                  "typography": Object {
                    "body1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00938em",
                      "lineHeight": 1.5,
                    },
                    "body2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.01071em",
                      "lineHeight": 1.43,
                    },
                    "button": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.02857em",
                      "lineHeight": 1.75,
                      "textTransform": "uppercase",
                    },
                    "caption": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.03333em",
                      "lineHeight": 1.66,
                    },
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": 14,
                    "fontWeightBold": 700,
                    "fontWeightLight": 300,
                    "fontWeightMedium": 500,
                    "fontWeightRegular": 400,
                    "h1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "6rem",
                      "fontWeight": 300,
                      "letterSpacing": "-0.01562em",
                      "lineHeight": 1.167,
                    },
                    "h2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3.75rem",
                      "fontWeight": 300,
                      "letterSpacing": "-0.00833em",
                      "lineHeight": 1.2,
                    },
                    "h3": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3rem",
                      "fontWeight": 400,
                      "letterSpacing": "0em",
                      "lineHeight": 1.167,
                    },
                    "h4": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "2.125rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00735em",
                      "lineHeight": 1.235,
                    },
                    "h5": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.5rem",
                      "fontWeight": 400,
                      "letterSpacing": "0em",
                      "lineHeight": 1.334,
                    },
                    "h6": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.25rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.0075em",
                      "lineHeight": 1.6,
                    },
                    "htmlFontSize": 16,
                    "overline": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.08333em",
                      "lineHeight": 2.66,
                      "textTransform": "uppercase",
                    },
                    "pxToRem": [Function],
                    "round": [Function],
                    "subtitle1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00938em",
                      "lineHeight": 1.75,
                    },
                    "subtitle2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.00714em",
                      "lineHeight": 1.57,
                    },
                  },
                  "zIndex": Object {
                    "appBar": 1100,
                    "drawer": 1200,
                    "mobileStepper": 1000,
                    "modal": 1300,
                    "snackbar": 1400,
                    "speedDial": 1050,
                    "tooltip": 1500,
                  },
                },
                "name": "MuiBackdrop",
              },
              "propTypes": Object {
                "classes": [Function],
                "innerRef": [Function],
              },
              "render": [Function],
              "useStyles": [Function],
            }
          }
          BackdropProps={
            Object {
              "transitionDuration": Object {
                "enter": 225,
                "exit": 195,
              },
            }
          }
          className="MuiDialog-root makeStyles-confirmDialog-33"
          closeAfterTransition={true}
          disableBackdropClick={false}
          disableEscapeKeyDown={false}
          id="dialog"
          onClose={[Function]}
          open={false}
        />
      </ForwardRef(Dialog)>
    </WithStyles(ForwardRef(Dialog))>
  </UndoDelete>
  <WithStyles(ForwardRef(Grid))
    container={true}
    justify="center"
  >
    <ForwardRef(Grid)
      classes={
        Object {
          "align-content-xs-center": "MuiGrid-align-content-xs-center",
          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
          "align-items-xs-center": "MuiGrid-align-items-xs-center",
          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
          "container": "MuiGrid-container",
          "direction-xs-column": "MuiGrid-direction-xs-column",
          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
          "grid-lg-1": "MuiGrid-grid-lg-1",
          "grid-lg-10": "MuiGrid-grid-lg-10",
          "grid-lg-11": "MuiGrid-grid-lg-11",
          "grid-lg-12": "MuiGrid-grid-lg-12",
          "grid-lg-2": "MuiGrid-grid-lg-2",
          "grid-lg-3": "MuiGrid-grid-lg-3",
          "grid-lg-4": "MuiGrid-grid-lg-4",
          "grid-lg-5": "MuiGrid-grid-lg-5",
          "grid-lg-6": "MuiGrid-grid-lg-6",
          "grid-lg-7": "MuiGrid-grid-lg-7",
          "grid-lg-8": "MuiGrid-grid-lg-8",
          "grid-lg-9": "MuiGrid-grid-lg-9",
          "grid-lg-auto": "MuiGrid-grid-lg-auto",
          "grid-lg-true": "MuiGrid-grid-lg-true",
          "grid-md-1": "MuiGrid-grid-md-1",
          "grid-md-10": "MuiGrid-grid-md-10",
          "grid-md-11": "MuiGrid-grid-md-11",
          "grid-md-12": "MuiGrid-grid-md-12",
          "grid-md-2": "MuiGrid-grid-md-2",
          "grid-md-3": "MuiGrid-grid-md-3",
          "grid-md-4": "MuiGrid-grid-md-4",
          "grid-md-5": "MuiGrid-grid-md-5",
          "grid-md-6": "MuiGrid-grid-md-6",
          "grid-md-7": "MuiGrid-grid-md-7",
          "grid-md-8": "MuiGrid-grid-md-8",
          "grid-md-9": "MuiGrid-grid-md-9",
          "grid-md-auto": "MuiGrid-grid-md-auto",
          "grid-md-true": "MuiGrid-grid-md-true",
          "grid-sm-1": "MuiGrid-grid-sm-1",
          "grid-sm-10": "MuiGrid-grid-sm-10",
          "grid-sm-11": "MuiGrid-grid-sm-11",
          "grid-sm-12": "MuiGrid-grid-sm-12",
          "grid-sm-2": "MuiGrid-grid-sm-2",
          "grid-sm-3": "MuiGrid-grid-sm-3",
          "grid-sm-4": "MuiGrid-grid-sm-4",
          "grid-sm-5": "MuiGrid-grid-sm-5",
          "grid-sm-6": "MuiGrid-grid-sm-6",
          "grid-sm-7": "MuiGrid-grid-sm-7",
          "grid-sm-8": "MuiGrid-grid-sm-8",
          "grid-sm-9": "MuiGrid-grid-sm-9",
          "grid-sm-auto": "MuiGrid-grid-sm-auto",
          "grid-sm-true": "MuiGrid-grid-sm-true",
          "grid-xl-1": "MuiGrid-grid-xl-1",
          "grid-xl-10": "MuiGrid-grid-xl-10",
          "grid-xl-11": "MuiGrid-grid-xl-11",
          "grid-xl-12": "MuiGrid-grid-xl-12",
          "grid-xl-2": "MuiGrid-grid-xl-2",
          "grid-xl-3": "MuiGrid-grid-xl-3",
          "grid-xl-4": "MuiGrid-grid-xl-4",
          "grid-xl-5": "MuiGrid-grid-xl-5",
          "grid-xl-6": "MuiGrid-grid-xl-6",
          "grid-xl-7": "MuiGrid-grid-xl-7",
          "grid-xl-8": "MuiGrid-grid-xl-8",
          "grid-xl-9": "MuiGrid-grid-xl-9",
          "grid-xl-auto": "MuiGrid-grid-xl-auto",
          "grid-xl-true": "MuiGrid-grid-xl-true",
          "grid-xs-1": "MuiGrid-grid-xs-1",
          "grid-xs-10": "MuiGrid-grid-xs-10",
          "grid-xs-11": "MuiGrid-grid-xs-11",
          "grid-xs-12": "MuiGrid-grid-xs-12",
          "grid-xs-2": "MuiGrid-grid-xs-2",
          "grid-xs-3": "MuiGrid-grid-xs-3",
          "grid-xs-4": "MuiGrid-grid-xs-4",
          "grid-xs-5": "MuiGrid-grid-xs-5",
          "grid-xs-6": "MuiGrid-grid-xs-6",
          "grid-xs-7": "MuiGrid-grid-xs-7",
          "grid-xs-8": "MuiGrid-grid-xs-8",
          "grid-xs-9": "MuiGrid-grid-xs-9",
          "grid-xs-auto": "MuiGrid-grid-xs-auto",
          "grid-xs-true": "MuiGrid-grid-xs-true",
          "item": "MuiGrid-item",
          "justify-xs-center": "MuiGrid-justify-xs-center",
          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
          "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
          "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
          "root": "MuiGrid-root",
          "spacing-xs-1": "MuiGrid-spacing-xs-1",
          "spacing-xs-10": "MuiGrid-spacing-xs-10",
          "spacing-xs-2": "MuiGrid-spacing-xs-2",
          "spacing-xs-3": "MuiGrid-spacing-xs-3",
          "spacing-xs-4": "MuiGrid-spacing-xs-4",
          "spacing-xs-5": "MuiGrid-spacing-xs-5",
          "spacing-xs-6": "MuiGrid-spacing-xs-6",
          "spacing-xs-7": "MuiGrid-spacing-xs-7",
          "spacing-xs-8": "MuiGrid-spacing-xs-8",
          "spacing-xs-9": "MuiGrid-spacing-xs-9",
          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
          "zeroMinWidth": "MuiGrid-zeroMinWidth",
        }
      }
      container={true}
      justify="center"
    >
      <div
        className="MuiGrid-root MuiGrid-container MuiGrid-justify-xs-center"
      >
        <Styled(MuiBox)
          pt={3}
        >
          <div
            className="MuiBox-root MuiBox-root-34"
          >
            <WithStyles(ForwardRef(CircularProgress))>
              <ForwardRef(CircularProgress)
                classes={
                  Object {
                    "circle": "MuiCircularProgress-circle",
                    "circleDeterminate": "MuiCircularProgress-circleDeterminate",
                    "circleDisableShrink": "MuiCircularProgress-circleDisableShrink",
                    "circleIndeterminate": "MuiCircularProgress-circleIndeterminate",
                    "circleStatic": "MuiCircularProgress-circleStatic",
                    "colorPrimary": "MuiCircularProgress-colorPrimary",
                    "colorSecondary": "MuiCircularProgress-colorSecondary",
                    "determinate": "MuiCircularProgress-determinate",
                    "indeterminate": "MuiCircularProgress-indeterminate",
                    "root": "MuiCircularProgress-root",
                    "static": "MuiCircularProgress-static",
                    "svg": "MuiCircularProgress-svg",
                  }
                }
              >
                <div
                  className="MuiCircularProgress-root MuiCircularProgress-colorPrimary MuiCircularProgress-indeterminate"
                  role="progressbar"
                  style={
                    Object {
                      "height": 40,
                      "width": 40,
                    }
                  }
                >
                  <svg
                    className="MuiCircularProgress-svg"
                    viewBox="22 22 44 44"
                  >
                    <circle
                      className="MuiCircularProgress-circle MuiCircularProgress-circleIndeterminate"
                      cx={44}
                      cy={44}
                      fill="none"
                      r={20.2}
                      strokeWidth={3.6}
                      style={Object {}}
                    />
                  </svg>
                </div>
              </ForwardRef(CircularProgress)>
            </WithStyles(ForwardRef(CircularProgress))>
          </div>
        </Styled(MuiBox)>
      </div>
    </ForwardRef(Grid)>
  </WithStyles(ForwardRef(Grid))>
  <EditMessage
    channel="pro.one"
    message={Array []}
    messagesLength={4}
    updated={[MockFunction]}
  >
    <WithStyles(ForwardRef(TextField))
      InputProps={
        Object {
          "endAdornment": <WithStyles(ForwardRef(InputAdornment))
            position="end"
          >
            <WithStyles(ForwardRef(Button))
              onClick={[Function]}
            >
              <img
                alt="edit"
                src="/images/send-button.svg"
              />
            </WithStyles(ForwardRef(Button))>
          </WithStyles(ForwardRef(InputAdornment))>,
        }
      }
      autoComplete="off"
      disabled={true}
      fullWidth={true}
      id="message"
      name="message"
      onChange={[Function]}
      placeholder="Enter your message here"
      value=""
      variant="outlined"
    >
      <ForwardRef(TextField)
        InputProps={
          Object {
            "endAdornment": <WithStyles(ForwardRef(InputAdornment))
              position="end"
            >
              <WithStyles(ForwardRef(Button))
                onClick={[Function]}
              >
                <img
                  alt="edit"
                  src="/images/send-button.svg"
                />
              </WithStyles(ForwardRef(Button))>
            </WithStyles(ForwardRef(InputAdornment))>,
          }
        }
        autoComplete="off"
        classes={
          Object {
            "root": "MuiTextField-root",
          }
        }
        disabled={true}
        fullWidth={true}
        id="message"
        name="message"
        onChange={[Function]}
        placeholder="Enter your message here"
        value=""
        variant="outlined"
      >
        <WithStyles(ForwardRef(FormControl))
          className="MuiTextField-root"
          color="primary"
          disabled={true}
          error={false}
          fullWidth={true}
          required={false}
          variant="outlined"
        >
          <ForwardRef(FormControl)
            className="MuiTextField-root"
            classes={
              Object {
                "fullWidth": "MuiFormControl-fullWidth",
                "marginDense": "MuiFormControl-marginDense",
                "marginNormal": "MuiFormControl-marginNormal",
                "root": "MuiFormControl-root",
              }
            }
            color="primary"
            disabled={true}
            error={false}
            fullWidth={true}
            required={false}
            variant="outlined"
          >
            <div
              className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
            >
              <WithStyles(ForwardRef(OutlinedInput))
                autoComplete="off"
                autoFocus={false}
                endAdornment={
                  <WithStyles(ForwardRef(InputAdornment))
                    position="end"
                  >
                    <WithStyles(ForwardRef(Button))
                      onClick={[Function]}
                    >
                      <img
                        alt="edit"
                        src="/images/send-button.svg"
                      />
                    </WithStyles(ForwardRef(Button))>
                  </WithStyles(ForwardRef(InputAdornment))>
                }
                fullWidth={true}
                id="message"
                multiline={false}
                name="message"
                onChange={[Function]}
                placeholder="Enter your message here"
                value=""
              >
                <ForwardRef(OutlinedInput)
                  autoComplete="off"
                  autoFocus={false}
                  classes={
                    Object {
                      "adornedEnd": "MuiOutlinedInput-adornedEnd",
                      "adornedStart": "MuiOutlinedInput-adornedStart",
                      "colorSecondary": "MuiOutlinedInput-colorSecondary",
                      "disabled": "Mui-disabled",
                      "error": "Mui-error",
                      "focused": "Mui-focused",
                      "input": "MuiOutlinedInput-input",
                      "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                      "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                      "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                      "inputMultiline": "MuiOutlinedInput-inputMultiline",
                      "marginDense": "MuiOutlinedInput-marginDense",
                      "multiline": "MuiOutlinedInput-multiline",
                      "notchedOutline": "MuiOutlinedInput-notchedOutline",
                      "root": "MuiOutlinedInput-root",
                    }
                  }
                  endAdornment={
                    <WithStyles(ForwardRef(InputAdornment))
                      position="end"
                    >
                      <WithStyles(ForwardRef(Button))
                        onClick={[Function]}
                      >
                        <img
                          alt="edit"
                          src="/images/send-button.svg"
                        />
                      </WithStyles(ForwardRef(Button))>
                    </WithStyles(ForwardRef(InputAdornment))>
                  }
                  fullWidth={true}
                  id="message"
                  multiline={false}
                  name="message"
                  onChange={[Function]}
                  placeholder="Enter your message here"
                  value=""
                >
                  <WithStyles(ForwardRef(InputBase))
                    autoComplete="off"
                    autoFocus={false}
                    classes={
                      Object {
                        "adornedEnd": "MuiOutlinedInput-adornedEnd",
                        "adornedStart": "MuiOutlinedInput-adornedStart",
                        "colorSecondary": "MuiOutlinedInput-colorSecondary",
                        "disabled": "Mui-disabled",
                        "error": "Mui-error",
                        "focused": "Mui-focused",
                        "input": "MuiOutlinedInput-input",
                        "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                        "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                        "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                        "inputMultiline": "MuiOutlinedInput-inputMultiline",
                        "marginDense": "MuiOutlinedInput-marginDense",
                        "multiline": "MuiOutlinedInput-multiline",
                        "notchedOutline": null,
                        "root": "MuiOutlinedInput-root",
                      }
                    }
                    endAdornment={
                      <WithStyles(ForwardRef(InputAdornment))
                        position="end"
                      >
                        <WithStyles(ForwardRef(Button))
                          onClick={[Function]}
                        >
                          <img
                            alt="edit"
                            src="/images/send-button.svg"
                          />
                        </WithStyles(ForwardRef(Button))>
                      </WithStyles(ForwardRef(InputAdornment))>
                    }
                    fullWidth={true}
                    id="message"
                    inputComponent="input"
                    multiline={false}
                    name="message"
                    onChange={[Function]}
                    placeholder="Enter your message here"
                    renderSuffix={[Function]}
                    type="text"
                    value=""
                  >
                    <ForwardRef(InputBase)
                      autoComplete="off"
                      autoFocus={false}
                      classes={
                        Object {
                          "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                          "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                          "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                          "disabled": "Mui-disabled Mui-disabled",
                          "error": "Mui-error Mui-error",
                          "focused": "Mui-focused Mui-focused",
                          "formControl": "MuiInputBase-formControl",
                          "fullWidth": "MuiInputBase-fullWidth",
                          "input": "MuiInputBase-input MuiOutlinedInput-input",
                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                          "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                          "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                          "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                          "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                          "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                          "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                          "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                          "root": "MuiInputBase-root MuiOutlinedInput-root",
                        }
                      }
                      endAdornment={
                        <WithStyles(ForwardRef(InputAdornment))
                          position="end"
                        >
                          <WithStyles(ForwardRef(Button))
                            onClick={[Function]}
                          >
                            <img
                              alt="edit"
                              src="/images/send-button.svg"
                            />
                          </WithStyles(ForwardRef(Button))>
                        </WithStyles(ForwardRef(InputAdornment))>
                      }
                      fullWidth={true}
                      id="message"
                      inputComponent="input"
                      multiline={false}
                      name="message"
                      onChange={[Function]}
                      placeholder="Enter your message here"
                      renderSuffix={[Function]}
                      type="text"
                      value=""
                    >
                      <div
                        className="MuiInputBase-root MuiOutlinedInput-root Mui-disabled Mui-disabled MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd"
                        onClick={[Function]}
                      >
                        <input
                          aria-invalid={false}
                          autoComplete="off"
                          autoFocus={false}
                          className="MuiInputBase-input MuiOutlinedInput-input Mui-disabled Mui-disabled MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                          disabled={true}
                          id="message"
                          name="message"
                          onAnimationStart={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Enter your message here"
                          required={false}
                          type="text"
                          value=""
                        />
                        <WithStyles(ForwardRef(InputAdornment))
                          position="end"
                        >
                          <ForwardRef(InputAdornment)
                            classes={
                              Object {
                                "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                "filled": "MuiInputAdornment-filled",
                                "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                "marginDense": "MuiInputAdornment-marginDense",
                                "positionEnd": "MuiInputAdornment-positionEnd",
                                "positionStart": "MuiInputAdornment-positionStart",
                                "root": "MuiInputAdornment-root",
                              }
                            }
                            position="end"
                          >
                            <div
                              className="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                            >
                              <WithStyles(ForwardRef(Button))
                                onClick={[Function]}
                              >
                                <ForwardRef(Button)
                                  classes={
                                    Object {
                                      "colorInherit": "MuiButton-colorInherit",
                                      "contained": "MuiButton-contained",
                                      "containedPrimary": "MuiButton-containedPrimary",
                                      "containedSecondary": "MuiButton-containedSecondary",
                                      "containedSizeLarge": "MuiButton-containedSizeLarge",
                                      "containedSizeSmall": "MuiButton-containedSizeSmall",
                                      "disableElevation": "MuiButton-disableElevation",
                                      "disabled": "Mui-disabled",
                                      "endIcon": "MuiButton-endIcon",
                                      "focusVisible": "Mui-focusVisible",
                                      "fullWidth": "MuiButton-fullWidth",
                                      "iconSizeLarge": "MuiButton-iconSizeLarge",
                                      "iconSizeMedium": "MuiButton-iconSizeMedium",
                                      "iconSizeSmall": "MuiButton-iconSizeSmall",
                                      "label": "MuiButton-label",
                                      "outlined": "MuiButton-outlined",
                                      "outlinedPrimary": "MuiButton-outlinedPrimary",
                                      "outlinedSecondary": "MuiButton-outlinedSecondary",
                                      "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                      "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                      "root": "MuiButton-root",
                                      "sizeLarge": "MuiButton-sizeLarge",
                                      "sizeSmall": "MuiButton-sizeSmall",
                                      "startIcon": "MuiButton-startIcon",
                                      "text": "MuiButton-text",
                                      "textPrimary": "MuiButton-textPrimary",
                                      "textSecondary": "MuiButton-textSecondary",
                                      "textSizeLarge": "MuiButton-textSizeLarge",
                                      "textSizeSmall": "MuiButton-textSizeSmall",
                                    }
                                  }
                                  onClick={[Function]}
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    className="MuiButton-root MuiButton-text"
                                    component="button"
                                    disabled={false}
                                    focusRipple={true}
                                    focusVisibleClassName="Mui-focusVisible"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <ForwardRef(ButtonBase)
                                      className="MuiButton-root MuiButton-text"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      component="button"
                                      disabled={false}
                                      focusRipple={true}
                                      focusVisibleClassName="Mui-focusVisible"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <button
                                        className="MuiButtonBase-root MuiButton-root MuiButton-text"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        <span
                                          className="MuiButton-label"
                                        >
                                          <img
                                            alt="edit"
                                            src="/images/send-button.svg"
                                          />
                                        </span>
                                        <WithStyles(memo)
                                          center={false}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={false}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(Button)>
                              </WithStyles(ForwardRef(Button))>
                            </div>
                          </ForwardRef(InputAdornment)>
                        </WithStyles(ForwardRef(InputAdornment))>
                        <WithStyles(ForwardRef(NotchedOutline))
                          className="MuiOutlinedInput-notchedOutline"
                          labelWidth={0}
                          notched={false}
                        >
                          <ForwardRef(NotchedOutline)
                            className="MuiOutlinedInput-notchedOutline"
                            classes={
                              Object {
                                "legend": "PrivateNotchedOutline-legend-45",
                                "legendLabelled": "PrivateNotchedOutline-legendLabelled-46",
                                "legendNotched": "PrivateNotchedOutline-legendNotched-47",
                                "root": "PrivateNotchedOutline-root-44",
                              }
                            }
                            labelWidth={0}
                            notched={false}
                          >
                            <fieldset
                              aria-hidden={true}
                              className="PrivateNotchedOutline-root-44 MuiOutlinedInput-notchedOutline"
                              style={
                                Object {
                                  "paddingLeft": 8,
                                }
                              }
                            >
                              <legend
                                className="PrivateNotchedOutline-legend-45"
                                style={
                                  Object {
                                    "width": 0.01,
                                  }
                                }
                              >
                                <span
                                  dangerouslySetInnerHTML={
                                    Object {
                                      "__html": "&#8203;",
                                    }
                                  }
                                />
                              </legend>
                            </fieldset>
                          </ForwardRef(NotchedOutline)>
                        </WithStyles(ForwardRef(NotchedOutline))>
                      </div>
                    </ForwardRef(InputBase)>
                  </WithStyles(ForwardRef(InputBase))>
                </ForwardRef(OutlinedInput)>
              </WithStyles(ForwardRef(OutlinedInput))>
            </div>
          </ForwardRef(FormControl)>
        </WithStyles(ForwardRef(FormControl))>
      </ForwardRef(TextField)>
    </WithStyles(ForwardRef(TextField))>
  </EditMessage>
</Chat>
`;
